<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="farmerinsured">
<sql id="Insured_Column_List" >
	insuredid, farmername, farmeridnum, name, type,
    amount, insuretime, limittime, recorder, recordtime
</sql>
<insert id="save" useGeneratedKeys="true" keyProperty="insuredId" 
	parameterType="com.bank.beans.FarmerInsured">
	insert into t_farmer_insured
	<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="farmerName != null">
			farmername,
		</if>
		<if test="farmerIdNum != null">
			farmeridnum,
		</if>
   		<if test="name != null">
   			name,
   		</if>
   		<if test="type != null">
   			type,
   		</if>
   		<if test="amount != null">
   			amount,
   		</if>
   		<if test="insureTime != null">
   			insuretime,
   		</if>
   		<if test="limitTime != null">
   			limittime,
   		</if>
		<if test ="recorder != null">
			recorder,
		</if>
		<if test="recordTime != null">
		 	recordtime
		</if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="farmerName != null">
			#{farmerName,jdbcType=VARCHAR},
		</if>
		<if test="farmerIdNum != null">
			#{farmerIdNum,jdbcType=VARCHAR},
		</if>
   		<if test="name != null">
   			#{name,jdbcType=VARCHAR},
   		</if>
   		<if test="type != null">
   			#{type,jdbcType=INTEGER},
   		</if>
   		<if test="amount != null">
   			#{amount,jdbcType=DOUBLE},
   		</if>
   		<if test="insureTime != null">
   			#{insureTime,jdbcType=DATE},
   		</if>
   		<if test="limitTime != null">
   			#{limitTime,jdbcType=DATE},
   		</if>
		<if test ="recorder != null">
			#{recorder,jdbcType=VARCHAR},
		</if>
		<if test="recordTime != null">
		 	#{recordTime,jdbcType=TIMESTAMP}
		</if>
	</trim>
</insert>
<select id="findByPK" parameterType="Long" resultType="com.bank.beans.FarmerInsured">
	select 
	<include refid="Insured_Column_List" />
	from t_farmer_insured where insuredid = #{id,jdbcType=INTEGER}
</select>
<resultMap id="farmerInsuredList" type="com.bank.beans.FarmerInsured">
    <result column="insuredId" property="id" jdbcType="BIGINT"/>
    <result column="farmerName" property="farmerName" jdbcType="VARCHAR" />
    <result column="farmerIdnum" property="farmerIdnum" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
	<result column="amount" property="amount" jdbcType="DOUBLE" />
	<result column="insureTime" property="insureTime" jdbcType="DATE" />
	<result column="limitTime" property="limitTime" jdbcType="DATE" />
    <result column="recorder" property="recorder" jdbcType="VARCHAR" />
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<select id="pageing" parameterType="Map" resultMap="farmerInsuredList">
	select 
	<include refid="Insured_Column_List" />
	from 
	(select t.*,rownumber() over(order by recordtime desc) as rn from t_farmer_insured t
	<where>
		<if test="farmerName != null and farmerName != '' ">
			t.farmername like CONCAT(CONCAT('%',#{farmerName}),'%') 
		</if>
		<if test="farmerIdNum != null and farmerIdNum != ''">
		   	and t.farmeridnum like CONCAT(CONCAT('%',#{farmerIdNum}),'%')  
		</if>
		<if test="name != null and name != '' ">
			t.name like CONCAT(CONCAT('%',#{name}),'%') 
		</if>
		<if test="type != null and type != '' ">
			t.type like CONCAT(CONCAT('%',#{type}),'%') 
		</if>
		<if test="recorder != null and recorder != '' ">
		    and t.recoder like CONCAT(CONCAT('%',#{recoder}),'%')  
		</if>
		<if test="recordTimeBegin !=null and recordTimeBegin != ''">
		   	<![CDATA[and t.recordtime >=to_date('#{recordTimeBegin}','yyyy-mm-dd')]]>
		</if>
		<if test="recordTimeEnd !=null and recordTimeEnd != ''">
		   	<![CDATA[and t.recordtime <=to_date('#{recordTimeEnd}','yyyy-mm-dd')]]>
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	 </where>
</select>
</mapper>
