<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="farmer">
<sql id="Farmer_Column_List" >
 farmerId, farmerName, farmerIdnum, politicStatus, familyNum, phone, villages,address,sex,
 education,marryStatus, laborNum, postCode, runitId, runitName, recorder, recordTime
</sql>
<insert id="save" useGeneratedKeys="true" keyProperty="id" 
	parameterType="com.bank.beans.Farmer">
	insert into t_farmer
	<trim prefix="(" suffix=")" suffixOverrides=",">
	  <if test="farmerName != null" >
	  	farmerName,
	  </if>
	   <if test="farmerIdnum != null">
	   	farmerIdnum,
	  </if>
	  <if test="politicStatus != null">
	   	 politicStatus,
	  </if>
	  <if test="familyNum != null">
	   	 familyNum,
	  </if>
	  <if test="phone != null">
	   	 phone,
	  </if>
	  <if test="villages != null">
	   	 villages,
	  </if>
	  <if test="address != null">
	   	  address,
	  </if>
	  <if test="sex != null">
	   	 sex,
	  </if>
	  <if test="education != null">
	   	  education,
	  </if>
	  <if test="marryStatus != null">
	   	  marryStatus,
	  </if>
	  <if test="laborNum != null">
	   	laborNum,
	  </if>
	  <if test="postCode != null">
	   	postCode,
	  </if>
	  <if test="runitId != null">
	   runitId,
	  </if>
	  <if test="runitName != null">
		runitName
	  </if>
	  <if test="recorder != null">
	   recorder,
	  </if>
	  <if test="recordTime != null">
		recordTime
	  </if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
	  <if test="farmerName != null" >
	  	#{farmerName,jdbcType=VARCHAR},
	  </if>
	   <if test="farmerIdnum != null">
	   	#{farmerIdnum,jdbcType=VARCHAR},
	  </if>
	  <if test="politicStatus != null">
	   	#{politicStatus,jdbcType=INTEGER},
	  </if>
	  <if test="familyNum != null">
	   	#{familyNum,jdbcType=INTEGER},
	  </if>
	  <if test="phone != null">
	   	#{phone,jdbcType=VARCHAR},
	  </if>
	   <if test="villages != null">
	   	#{villages,jdbcType=VARCHAR},
	  </if>
	  <if test="address != null">
	   	#{address,jdbcType=VARCHAR},
	  </if>
	   <if test="sex != null">
	   	#{sex,jdbcType=INTEGER},
	  </if>
	  <if test="education != null">
	   	#{education,jdbcType=INTEGER},
	  </if>
	  <if test="marryStatus != null">
	   	#{marryStatus,jdbcType=VARCHAR},
	  </if>
	  <if test="laborNum != null">
	   	#{laborNum,jdbcType=INTEGER},
	  </if>
	  <if test="postCode != null">
	   	#{postCode,jdbcType=INTEGER},
	  </if>
	   <if test="runitId != null">
	    #{runitId,jdbcType=VARCHAR},
	  </if>
	  <if test="runitName != null">
		#{runitName,jdbcType=VARCHAR},
	  </if>
	  <if test="recorder != null">
	    #{recorder,jdbcType=VARCHAR},
	  </if>
	  <if test="recordTime != null">
		#{recordTime,jdbcType=TIMESTAMP}
	  </if>
	</trim>
</insert>
<insert id="saveApply" useGeneratedKeys="true" keyProperty="id" 
	parameterType="com.bank.beans.Apply">
	insert into t_bank_apply
	<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="userId !=  null">
			userId,
		</if>
		<if test="userName != null">
			userName,
		</if>
		<if test="applyType != null">
			applyType,
		</if>
		<if test="applyName != null">
			applyName,
		</if>
		<if test="applyInfo != null">
			applyInfo,
		</if>
		<if test="applyTime != null">
			applyTime
		</if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="userId !=  null">
			#{userId,jdbcType=VARCHAR},
		</if>
		<if test="userName != null">
			#{userName,jdbcType=VARCHAR},
		</if>
		<if test="applyType != null">
			#{applyType,jdbcType=VARCHAR},
		</if>
		<if test="applyName != null">
			#{applyName,jdbcType=VARCHAR},
		</if>
		<if test="applyInfo != null">
			#{applyInfo,jdbcType=VARCHAR},
		</if>
		<if test="applyTime != null">
			#{applyTime,jdbcType=DATE}
		</if>
	</trim>
</insert>
<update id="update" parameterType="com.bank.beans.Farmer">
	update t_farmer 
	set farmerName = #{farmerName,jdbcType = VARCHAR}, 
	farmerIdnum = #{farmerIdnum,jdbcType = VARCHAR}, 
	politicStatus = #{politicStatus,jdbcType = INTEGER},
	familyNum = #{familyNum,jdbcType = INTEGER}, 
	phone = #{phone,jdbcType = VARCHAR}, 
	villages = #{villages,jdbcType=VARCHAR},
	address = #{address,jdbcType = VARCHAR},
 	sex=  #{sex,jdbcType = INTEGER},
 	education = #{education,jdbcType = INTEGER},
 	marryStatus = #{marryStatus,jdbcType = VARCHAR},
 	laborNum = #{laborNum,jdbcType = VARCHAR},
 	postCode = #{postCode,jdbcType = VARCHAR},
 	runitId = #{runitId,jdbcType = VARCHAR},
	runitName = #{runitName,jdbcType = VARCHAR},
	recorder = #{recorder,jdbcType=VARCHAR},
	recordTime = #{recordTime,jdbcType=DATE}
 	where farmerId = #{id,jdbcType=BIGINT}
</update>
<resultMap id="farmerList" type="com.bank.beans.Farmer">
    <id column="farmerId" property="id" jdbcType="BIGINT"/>
    <result column="farmerName" property="farmerName" jdbcType="VARCHAR" />
    <result column="farmerIdnum" property="farmerIdnum" jdbcType="VARCHAR" />
    <result column="politicStatus" property="politicStatus" jdbcType="INTEGER" />
    <result column="familyNum" property="familyNum" jdbcType="INTEGER" />
	<result column="phone" property="phone" jdbcType="VARCHAR" />
	<result column="villages" property="villages" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
     <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="marryStatus" property="marryStatus" jdbcType="VARCHAR" />
    <result column="laborNum" property="laborNum" jdbcType="INTEGER" />
    <result column="postCode" property="postCode" jdbcType="INTEGER" />
    <result column="runitId" property="runitId" jdbcType="VARCHAR" />
    <result column="runitName" property="runitName" jdbcType="VARCHAR" />
    <result column="recorder" property="recorder" jdbcType="VARCHAR" />
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<resultMap id="applylist" type="com.bank.beans.Apply">
	 <id column="applyId" property="id" jdbcType="BIGINT"/>
	 <result column="userId" property="userId" jdbcType="VARCHAR" />
	 <result column="userName" property="userName" jdbcType="VARCHAR" />
	 <result column="applyType" property="applyType" jdbcType="VARCHAR" />
	 <result column="applyName" property="applyName" jdbcType="VARCHAR" />
	 <result column="applyInfo" property="applyInfo" jdbcType="VARCHAR" />
	 <result column="applyTime" property="applyTime" jdbcType="DATE" />
</resultMap>
<select id="findApplyByUser" parameterType="String" resultMap="applylist">
	select applyId,userId,userName,applyType,applyName,applyInfo,applyTime
	from t_bank_apply
	where userId = #{userId,jdbcType=VARCHAR}
</select>
<select id="findByPK" parameterType="Long" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from t_Farmer where farmerId = #{id,jdbcType=INTEGER}
</select>
<select id="findByPKM" parameterType="list" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from t_Farmer 
	<where>
		farmerId in
		<foreach item="item" index="index" collection="list" 
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</where>
</select>
<select id="findByID" parameterType="Map" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from t_Farmer 
	where farmerIdNum = #{farmerIdNum,jdbcType=VARCHAR}
	and runitId =  #{runitId,jdbcType=VARCHAR}
	
</select>
<select id="findByIDAndName" parameterType="String" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from t_Farmer
	<where>
	<if test="farmerName != null and  farmerName != ''">
		farmerName like CONCAT(CONCAT('%',#{farmerName}),'%') 
	</if>
	<if test="farmerIdNum != null and farmerIdNum != ''">
		and farmerIdNum = #{farmerIdNum,jdbcType=VARCHAR}
	</if>
	</where>
</select>
<select id="findByNames" parameterType="String" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from t_Farmer
	<where>
		farmerName in
		<foreach item="item" index="index" collection="list" 
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</where>
</select>
<select id="findByMultiCondition" parameterType="Map" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from t_farmer t
	<where>
	 t.farmeridnum = #{farmerIdNum,jdbcType=VARCHAR}
	 </where>
</select>

<select id="findPagingByIDAndName" parameterType="Map" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from 
	(select t.*,rownumber() over() as rn from t_farmer t
	<where>
		<if test="farmerName != null">
			t.farmername like CONCAT(CONCAT('%',#{farmerName}),'%') 
		</if>
		<if test="farmerIdNum != null">
		   	and t.farmeridnum like CONCAT(CONCAT('%',#{farmerIdNum}),'%')  
		</if>
		<if test="runitId != null">
		   	and t.runitId = #{runitId} 
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	 </where>
</select>
</mapper>