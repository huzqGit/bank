<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="farmerpay">
<sql id="Pay_Column_List" >
	payid, farmerName, farmerIdNum, productpay, livingpay, medicalpay,
	educatepay, insuredpay, otherpay, totalpay, recorder, recordTime
</sql>
<insert id="save" useGeneratedKeys="true" keyProperty="payId" 
		parameterType="com.bank.beans.FarmerPay">
		insert into t_farmer_pay
		<trim prefix="(" suffix=")" suffixOverrides=",">
		   <if test="farmerName != null">
		   	   farmername,
		   </if>
		   <if test="farmerIdNum != null">
		       farmeridnum,
		   </if>
	  	   <if test="productPay != null">
	  		   productpay,
	  	   </if>
	  	   <if test="livingPay != null">
	  		   livingpay,
	  	   </if>
	   	   <if test="medicalPay != null">
	   		   medicalpay,
	   	   </if>
	   	   <if test="educatePay != null">
	   		   educatepay,
	   	   </if>
	   	   <if test="insuredPay != null">
	   		   insuredpay,
	   	   </if>
		   <if test="otherPay != null">
			   otherpay,
		   </if>
		   <if test="totalPay != null">
			   totalpay,
		   </if>
	   	   <if test="recorder != null">
	   		   recorder,
	   	   </if>
	  	   <if test="recordTime != null">
	  		   recordtime
	  	   </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		   <if test="farmerName != null">
               #{farmerName,jdbcType=VARCHAR},
       	   </if>
	       <if test="farmerIdNum != null">
	           #{farmerIdNum,jdbcType=VARCHAR},
	       </if>
	       <if test="productPay != null">
	           #{productPay,jdbcType=DOUBLE},
	       </if>
           <if test="livingPay != null">
           	   #{livingPay,jdbcType=DOUBLE},
           </if>
           <if test="medicalPay != null">
               #{medicalPay,jdbcType=DOUBLE},
           </if>
           <if test="educatePay != null">
           	   #{educatePay,jdbcType=DOUBLE},
           </if>
           <if test="insuredPay != null">
          	   #{insuredPay,jdbcType=DOUBLE},
          </if>
	      <if test="otherPay != null">
	           #{otherPay,jdbcType=DOUBLE},
	      </if>
	      <if test="totalPay != null">
	      	   #{totalPay,jdbcType=DOUBLE},
	      </if>
          <if test="recorder != null">
          	   #{recorder,jdbcType=VARCHAR},
          </if>
         <if test="recordTime != null">
              #{recordTime,jdbcType=TIMESTAMP}
         </if>
		</trim>
</insert>
<select id="findByPK" parameterType="Long" resultType="com.bank.beans.FarmerPay">
		select 
		<include refid="Pay_Column_List" />
		from t_farmer_pay where payid = #{id,jdbcType=INTEGER}
</select>
<resultMap id="farmerPayList" type="com.bank.beans.FarmerPay">
    <result column="payId" property="id" jdbcType="BIGINT"/>
    <result column="farmerName" property="farmerName" jdbcType="VARCHAR" />
    <result column="farmerIdNum" property="farmerIdNum" jdbcType="VARCHAR" />
    <result column="productPay" property="productPay" jdbcType="DOUBLE" />
    <result column="livingPay" property="livingPay" jdbcType="DOUBLE" />
	<result column="medicalPay" property="medicalPay" jdbcType="DOUBLE" />
	<result column="educatePay" property="educatePay" jdbcType="DOUBLE" />
    <result column="insuredPay" property="insuredPay" jdbcType="DOUBLE" />
    <result column="otherPay" property="otherPay" jdbcType="DOUBLE" />
	<result column="totalPay" property="totalPay" jdbcType="DOUBLE" />
    <result column="recorder" property="recorder" jdbcType="VARCHAR" />
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<select id="pageing" parameterType="Map" resultMap="farmerPayList">
	select 
	<include refid="Pay_Column_List" />
	from 
	(select t.*,rownumber() over(order by recordtime desc) as rn from t_farmer_pay t
	<where>
		<if test="farmerName != null and farmerName != '' ">
			t.farmername like CONCAT(CONCAT('%',#{farmerName}),'%') 
		</if>
		<if test="farmerIdNum != null and farmerIdNum != ''">
		   	and t.farmeridnum like CONCAT(CONCAT('%',#{farmerIdNum}),'%')  
		</if>
		<if test="recorder != null and recorder != '' ">
		    and t.recoder like CONCAT(CONCAT('%',#{recoder}),'%')  
		</if>
		<if test="recordTimeBegin !=null and recordTimeBegin != ''">
		   	<![CDATA[and t.recordtime >=to_date('#{recordTimeBegin}','yyyy-mm-dd')]]>
		</if>
		<if test="recordTimeEnd !=null and recordTimeEnd != ''">
		   	<![CDATA[and t.recordtime <=to_date('#{recordTimeEnd}','yyyy-mm-dd')]]>
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	</where>
</select>
</mapper>