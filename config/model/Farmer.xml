<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="farmer">
<sql id="Farmer_Column_List" >
 farmerid, farmername, farmeridnum, politicstatus, familynum, phone, address,
 marrystatus, labornum, postcode, nynetincome, fnnetincome, gsnetincome, dgnetincome,
 qtnetincome, allnetincome, recorder, recordtime
</sql>
<insert id="save" useGeneratedKeys="true" keyProperty="farmerId" 
	parameterType="com.bank.beans.Farmer">
	insert into t_farmer
	<trim prefix="(" suffix=")" suffixOverrides=",">
	  <if test="farmerName != null" >
	  	farmerName,
	  </if>
	   <if test="farmerIdnum != null">
	   	farmerIdnum,
	  </if>
	  <if test="politicStatus != null">
	   	 politicStatus,
	  </if>
	  <if test="familyNum != null">
	   	 familyNum,
	  </if>
	  <if test="phone != null">
	   	 phone,
	  </if>
	  <if test="address != null">
	   	  address,
	  </if>
	  <if test="marryStatus != null">
	   	  marryStatus,
	  </if>
	  <if test="laborNum != null">
	   	laborNum,
	  </if>
	  <if test="postCode != null">
	   	postCode,
	  </if>
	  <if test="nyNetincome != null">
	   	nyNetincome,
	  </if>
	  <if test="fnNetincome != null">
	  	 fnNetincome, 
	  </if>
	  <if test="gsNetincome != null">
	   	 gsNetincome,
	  </if>
	  <if test="dgNetincome != null">
	    dgNetincome,
	  </if>
	  <if test="qtNetincome != null">
	    qtNetincome,
	  </if>
	  <if test="allNetincome != null">
	   	allNetincome,
	  </if>
	  <if test="recorder != null">
	   recorder,
	  </if>
	  <if test="recordTime != null">
		recordTime
	  </if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
	  <if test="farmerName != null" >
	  	#{farmerName,jdbcType=VARCHAR},
	  </if>
	   <if test="farmerIdnum != null">
	   	#{farmerIdnum,jdbcType=VARCHAR},
	  </if>
	  <if test="politicStatus != null">
	   	#{politicStatus,jdbcType=INTEGER},
	  </if>
	  <if test="familyNum != null">
	   	#{familyNum,jdbcType=INTEGER},
	  </if>
	  <if test="phone != null">
	   	#{phone,jdbcType=VARCHAR},
	  </if>
	  <if test="address != null">
	   	#{address,jdbcType=VARCHAR},
	  </if>
	  <if test="marryStatus != null">
	   	#{marryStatus,jdbcType=VARCHAR},
	  </if>
	  <if test="laborNum != null">
	   	#{laborNum,jdbcType=INTEGER},
	  </if>
	  <if test="postCode != null">
	   	#{postCode,jdbcType=INTEGER},
	  </if>
	  <if test="nyNetincome != null">
	   	#{nyNetincome,jdbcType=DOUBLE},
	  </if>
	  <if test="fnNetincome != null">
	  	#{fnNetincome, jdbcType=DOUBLE},
	  </if>
	  <if test="gsNetincome != null">
	   	#{gsNetincome,jdbcType=DOUBLE},
	  </if>
	  <if test="dgNetincome != null">
	    #{dgNetincome,jdbcType=DOUBLE},
	  </if>
	  <if test="qtNetincome != null">
	    #{qtNetincome,jdbcType=DOUBLE},
	  </if>
	  <if test="allNetincome != null">
	   	#{allNetincome,jdbcType=DOUBLE},
	  </if>
	  <if test="recorder != null">
	    #{recorder,jdbcType=VARCHAR},
	  </if>
	  <if test="recordTime != null">
		#{recordTime,jdbcType=TIMESTAMP}
	  </if>
	</trim>
</insert>
<select id="findByPK" parameterType="Long" resultType="com.bank.beans.Farmer">
	select 
	<include refid="Farmer_Column_List" />
	from t_Farmer where farmerid = #{id,jdbcType=INTEGER}
</select>
<resultMap id="farmerList" type="com.bank.beans.Farmer">
    <result column="farmerId" property="id" jdbcType="BIGINT"/>
    <result column="farmerName" property="farmerName" jdbcType="VARCHAR" />
    <result column="farmerIdnum" property="farmerIdnum" jdbcType="VARCHAR" />
    <result column="politicStatus" property="politicStatus" jdbcType="INTEGER" />
    <result column="familyNum" property="familyNum" jdbcType="INTEGER" />
	<result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="marryStatus" property="marryStatus" jdbcType="VARCHAR" />
    <result column="laborNum" property="politicStatus" jdbcType="INTEGER" />
    <result column="postCode" property="postCode" jdbcType="INTEGER" />
	<result column="nyNetincome" property="nyNetincome" jdbcType="DOUBLE" />
    <result column="fnNetincome" property="fnNetincome" jdbcType="DOUBLE" />
    <result column="gsNetincome" property="gsNetincome" jdbcType="DOUBLE" />
	<result column="dgNetincome" property="dgNetincome" jdbcType="DOUBLE" />
    <result column="qtNetincome" property="qtNetincome" jdbcType="DOUBLE" />
    <result column="allNetincome" property="allNetincome" jdbcType="DOUBLE" />
    <result column="recorder" property="recorder" jdbcType="VARCHAR" />
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<select id="pageing" parameterType="Map" resultMap="farmerList">
	select 
	<include refid="Farmer_Column_List" />
	from 
	(select t.*,rownumber() over(order by recordtime desc) as rn from t_farmer t
	<where>
		<if test="farmerName != null and farmerName != '' ">
			t.farmername like CONCAT(CONCAT('%',#{farmerName}),'%') 
		</if>
		<if test="farmerIdNum != null and farmerIdNum != ''">
		   	and t.farmeridnum like CONCAT(CONCAT('%',#{farmerIdNum}),'%')  
		</if>
		<if test="recorder != null and recorder != '' ">
		    and t.recoder like CONCAT(CONCAT('%',#{recoder}),'%')  
		</if>
		<if test="recordTimeBegin !=null and recordTimeBegin != ''">
		   	<![CDATA[and t.recordtime >=to_date('#{recordTimeBegin}','yyyy-mm-dd')]]>
		</if>
		<if test="recordTimeEnd !=null and recordTimeEnd != ''">
		   	<![CDATA[and t.recordtime <=to_date('#{recordTimeEnd}','yyyy-mm-dd')]]>
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	 </where>
</select>
</mapper>