<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 名称空间有特殊的用途 -->
<mapper namespace="bank">

<!-- 查询用户信息
select：将select标签内容称为statement
id：是user.xml中的唯一标识 ，statement的id
parameterType：指定向sql（向statement中）中传入参数的类型
#{}：表示一个点位符，{}中的id表示传入变量名，当传入单个值｛｝中的变量名可以随意
resultType：将sql查询结果集映射成java对象的类型
 -->
<select id="findUserByUsername" parameterType="string"
resultType="com.bank.beans.User">
   SELECT * FROM BANK_USER WHERE username = #{id}
</select>

<!-- 插入用户
parameterType：指定输入参数类型，包括username,birthday,sex,address,detail,score
#{username}：里边的username是com.bank.beans.User的属性

 -->
<insert id="insertUser" parameterType="com.bank.beans.User">
  insert into BANK_USER(userid, username, password, birthday,sex,address) 
  values(#{userId}, #{username}, #{password}, #{birthday}, #{sex}, #{address})
</insert>

<update id="updateUser" parameterType="com.bank.beans.User">
	update BANK_USER set username = #{username}, password = #{password}, birthday = #{birthday},sex = #{sex},address = #{address} where userid = #{userId}
</update>

<insert id="deleteUser" parameterType="string">
  delete BANK_USER where userid = #{userId}
</insert>

<select id="verifyUser" parameterType="com.bank.beans.User" 
resultType="com.bank.beans.User">
   SELECT * FROM BANK_USER WHERE username = #{username} and password = #{password}
</select>

<select id="getUserById" parameterType="string"
resultType="com.bank.beans.User">
   SELECT * FROM BANK_USER WHERE userid = #{userId}
</select>
</mapper>