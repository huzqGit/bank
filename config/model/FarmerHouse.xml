<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="farmerhouse">
	<sql id="House_Column_List" >
		houseid, farmername, farmeridnum, houseproperty, housetype, houseaddress,
		buildarea, builddate, buildprice, floorarea, assessprice, recorder, recordtime
	</sql>
	<insert id="save" useGeneratedKeys="true" keyProperty="houseId" 
		parameterType="com.bank.beans.FarmerHouse">
		insert into t_farmer_house
		<trim prefix="(" suffix=")" suffixOverrides=",">
			 <if test="farmerName != null">
			 	farmername,
			 </if>
			 <if test="farmerIdNum != null">
			 	farmeridnum,
			 </if>
			 <if test="houseProperty != null">
				houseproperty,
			 </if>
			 <if test="houseType != null">
				housetype,
			 </if>
			 <if test="houseAddress != null">
			    houseaddress,
			 </if>
	  		 <if test="buildArea != null">
	  		    buildarea,
	  		 </if>
			<if test="buildDate != null">
				builddate,
			</if>
	  		<if test="buildPrice != null">
	  		    buildPrice,
	  		</if>
	  		<if test="floorArea != null">
	  			floorArea,
	  		</if>
	  		<if test="assessPrice != null">
	  			assessPrice,
	  		</if>
			<if test="recorder != null">
				recorder,
			</if>
			<if test="recordTime != null">
				recordTime
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="farmerName != null">
        		#{farmerName,jdbcType=VARCHAR},
       		</if>
	        <if test="farmerIdNum != null">
	         	#{farmerIdNum,jdbcType=VARCHAR},
	        </if>
	        <if test="houseProperty != null">
	        	#{houseProperty,jdbcType=VARCHAR},
	        </if>
	        <if test="houseType != null">
	        	#{houseType,jdbcType=VARCHAR},
	        </if>
	        <if test="houseAddress != null">
	          	#{houseAddress,jdbcType=VARCHAR},
	        </if>
	        <if test="buildArea != null">
	            #{buildArea,jdbcType=VARCHAR},
	        </if>
	        <if test="buildDate != null">
	            #{buildDate,jdbcType=VARCHAR},
	        </if>
	        <if test="buildPrice != null">
	            #{buildPrice,jdbcType=VARCHAR},
	        </if>
	        <if test="floorArea != null">
	           #{floorArea,jdbcType=VARCHAR},
	        </if>
	        <if test="assessPrice != null">
	           #{assessPrice,jdbcType=VARCHAR},
	        </if>
	        <if test="recorder != null">
	           #{recorder,jdbcType=VARCHAR},
	        </if>
	        <if test="recordTime != null">
	           #{recordTime,jdbcType=TIMESTAMP}
	        </if>
		</trim>
	</insert>
<select id="findByPK" parameterType="Long" resultType="com.bank.beans.FarmerHouse">
		select 
		<include refid="House_Column_List" />
		from t_farmer_house where houseid = #{id,jdbcType=INTEGER}
</select>
<resultMap id="farmerHouseList" type="com.bank.beans.FarmerHouse">
    <result column="houseId" property="id" jdbcType="BIGINT"/>
    <result column="farmerName" property="farmerName" jdbcType="VARCHAR" />
    <result column="farmerIdnum" property="farmerIdNum" jdbcType="VARCHAR" />
    <result column="houseProperty" property="houseProperty" jdbcType="VARCHAR" />
    <result column="houseType" property="houseType" jdbcType="VARCHAR" />
	<result column="houseAddress" property="houseAddress" jdbcType="VARCHAR"/>
	<result column="buildArea" property="buildArea" jdbcType="VARCHAR"/>
    <result column="buildDate" property="buildDate" jdbcType="DATE"/>
    <result column="buildPrice" property="buildPrice" jdbcType="DOUBLE"/>
	<result column="floorArea" property="floorArea" jdbcType="VARCHAR" />
	<result column="assessPrice" property="assessPrice" jdbcType="VARCHAR"/>
    <result column="recorder" property="recorder" jdbcType="VARCHAR"/>
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<select id="pageing" parameterType="Map" resultMap="farmerHouseList">
	select 
	<include refid="House_Column_List" />
	from 
	(select t.*,rownumber() over(order by recordtime desc) as rn from t_farmer_house t
	<where>
		<if test="farmerName != null and farmerName != '' ">
			t.farmername like CONCAT(CONCAT('%',#{farmerName}),'%') 
		</if>
		<if test="farmerIdNum != null and farmerIdNum != ''">
		   	and t.farmeridnum like CONCAT(CONCAT('%',#{farmerIdNum}),'%')  
		</if>
		<if test="houseProperty != null and houseProperty != ''">
		   	and t.houseproperty ='#{houseProperty}' 
		</if>
		<if test="houseType != null and houseType != ''">
		   	and t.housetype ='#{houseType}'  
		</if>
		<if test="recorder != null and recorder != '' ">
		    and t.recoder like CONCAT(CONCAT('%',#{recoder}),'%')  
		</if>
		<if test="recordTimeBegin !=null and recordTimeBegin != ''">
		   	<![CDATA[and t.recordtime >=to_date('#{recordTimeBegin}','yyyy-mm-dd')]]>
		</if>
		<if test="recordTimeEnd !=null and recordTimeEnd != ''">
		   	<![CDATA[and t.recordtime <=to_date('#{recordTimeEnd}','yyyy-mm-dd')]]>
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	</where>
</select>
</mapper>