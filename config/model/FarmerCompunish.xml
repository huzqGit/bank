<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="farmercompunish">
<sql id="Compunish_Column_List" >
	compunishId, farmerId, type, organ, detail, occurTime
</sql>
<insert id="save" useGeneratedKeys="true" keyProperty="id" 
		parameterType="com.bank.beans.FarmerCompunish">
	insert into t_farmer_compunish
	<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="farmerId != null">
			farmerId,
		</if>
		<if test="type != null">
			type,	
		</if>
		<if test ="organ != null">
			organ,
		</if>
		<if test="detail != null">
			detail,
		</if>	
		<if test="occurTime != null">
			occurTime,
		</if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="farmerId != null">
			#{farmerId,jdbcType=VARCHAR},
		</if>
		<if test="type != null">
			#{type,jdbcType=VARCHAR},	
		</if>
		<if test ="organ != null">
			#{organ,jdbcType=VARCHAR},
		</if>
		<if test="detail != null">
			#{detail,jdbcType=VARCHAR},
		</if>	
		<if test="occurTime != null">
			#{occurTime,jdbcType=DATE},
		</if>
	</trim>
</insert>
<delete id="delete" parameterType="Long">
	delete from t_farmer_compunish where compunishId = #{id,jdbcType=BIGINT}
</delete>
<update id="update">
	update t_farmer_compunish
	set farmerId = #{farmerId,jdbcType=BIGINT},
	type = #{ type,jdbcType=INTEGER},
	organ = #{ organ,jdbcType=VARCHAR},
	detail = #{ detail,jdbcType=VARCHAR},
	occurTime = #{ occurTime,jdbcType=DATE}
	where compunishId = #{id,jdbcType=BIGINT}
</update>
<select id="findByPK" parameterType="Long" resultMap="farmerCompunishList">
	select 
	<include refid="Compunish_Column_List" />
	from t_farmer_compunish where compunishId = #{id,jdbcType=BIGINT}
</select>
<select id="findByFarmerId" parameterType="Long" 
		resultMap="farmerCompunishList">
	select 
	<include refid="Compunish_Column_List" />
	from t_farmer_compunish where farmerId = #{id,jdbcType=BIGINT}
</select>
<select id="findPagingByFarmerId" parameterType="Map" 
		resultMap="farmerCompunishList">
	select 
	<include refid="Compunish_Column_List" />
	from 
	(select t.*,rownumber() over() as rn 
	from t_farmer_compunish t
	<where>
		<if test="farmerId != null">
		   	and t.farmerId = #{farmerId,jdbcType=BIGINT}
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	 </where>
</select>
<select id="findByFarmers" parameterType="list" resultMap="farmerCompunishList1">
	select 
	a.farmerName,a.farmerIdNum,b.*
	from t_farmer a,t_farmer_compunish b
	where a.farmerId = b.farmerId
	and a.farmerId in
	<foreach item="item" index="index" collection="list" 
			open="(" separator="," close=")">
	#{item}
	</foreach>
</select>
<resultMap id="farmerCompunishList" type="com.bank.beans.FarmerCompunish">
    <result column="compunishId" property="id" jdbcType="BIGINT"/>
    <result column="farmerId" property="farmerId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="organ" property="organ" jdbcType="VARCHAR" />
	<result column="detail" property="detail" jdbcType="VARCHAR" />
	<result column="occurTime" property="occurTime" jdbcType="DATE" />
    <result column="recorder" property="recorder" jdbcType="VARCHAR" />
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<resultMap id="farmerCompunishList1" type="com.bank.beans.FarmerCompunish">
    <result column="compunishId" property="id" jdbcType="BIGINT"/>
    <result column="farmerId" property="farmerId" jdbcType="BIGINT" />
    <result column="farmerName" property="farmerName" jdbcType="VARCHAR" />
    <result column="farmerIdNum" property="farmerIdNum" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="organ" property="organ" jdbcType="VARCHAR" />
	<result column="detail" property="detail" jdbcType="VARCHAR" />
	<result column="occurTime" property="occurTime" jdbcType="DATE" />
    <result column="recorder" property="recorder" jdbcType="VARCHAR" />
    <result column="recordTime" property="recordTime" jdbcType="DATE" />
</resultMap>
<select id="pageing" parameterType="Map" resultMap="farmerCompunishList">
	select 
	<include refid="Compunish_Column_List" />
	from 
	(select t.*,rownumber() over(order by recordtime desc) as rn from t_farmer_compunish t
	<where>
		<if test="farmerName != null and farmerName != '' ">
			t.farmername like CONCAT(CONCAT('%',#{farmerName}),'%') 
		</if>
		<if test="farmerIdNum != null and farmerIdNum != ''">
		   	and t.farmeridnum like CONCAT(CONCAT('%',#{farmerIdNum}),'%')  
		</if>
		<if test="type != null and type != '' ">
			t.type like CONCAT(CONCAT('%',#{type}),'%') 
		</if>
		<if test="organ != null and organ != ''">
		   	and t.organ like CONCAT(CONCAT('%',#{organ}),'%')  
		</if>
		<if test="recorder != null and recorder != '' ">
		    and t.recoder like CONCAT(CONCAT('%',#{recoder}),'%')  
		</if>
		<if test="recordTimeBegin !=null and recordTimeBegin != ''">
		   	<![CDATA[and t.recordtime >=to_date('#{recordTimeBegin}','yyyy-mm-dd')]]>
		</if>
		<if test="recordTimeEnd !=null and recordTimeEnd != ''">
		   	<![CDATA[and t.recordtime <=to_date('#{recordTimeEnd}','yyyy-mm-dd')]]>
		</if>
	 </where>
	 )
	 <where>
	 	<if test="start != null">
	    	rn between #{start} and #{end}
	   	</if>
	 </where>
</select>
</mapper>