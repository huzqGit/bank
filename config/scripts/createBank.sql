CREATE TABLE BANK.T_FARMER (
  FARMERID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERNAME	VARCHAR(20),
  FARMERIDNUM	VARCHAR(30)	NOT NULL,
  SEX	INTEGER,
  MARRYSTATUS	VARCHAR(10),
  POLITICSTATUS	INTEGER,
  EDUCATION	INTEGER,
  PHONE	VARCHAR(200),
  BANK	VARCHAR(100),
  ACCOUNT	VARCHAR(200),
  FAMILYNUM	INTEGER,
  LABORNUM	INTEGER,
  POSTCODE	INTEGER,
  IDTYPE	VARCHAR(50),
  OCCUPATION	VARCHAR(300),
  VILLAGES	VARCHAR(50),
  ADDRESS	VARCHAR(2000),
  FARMERTYPE	INTEGER,
  POORTYPE	INTEGER,
  POORREASON	INTEGER,
  PLOUGHAREA	DOUBLE,
  WATERINGAREA	DOUBLE,
  FORESTAREA	DOUBLE,
  FORESTAREA1	DOUBLE,
  FRUITAREA	DOUBLE,
  MEADOWAREA	DOUBLE,
  WATERAREA	DOUBLE,
  DRINKINGHARD	INTEGER,
  DRINKINGSAFE	INTEGER,
  USINGELECTRIC	INTEGER,
  USINGTOILET	INTEGER,
  FUELTYPE	INTEGER,
  USINGARTEL	INTEGER,
  NETINCOME	DOUBLE,
  WAGESINCOME	DOUBLE,
  OPERATEINCOME	DOUBLE,
  SUBSIDYINCOME	DOUBLE,
  USINGTELEVISION	INTEGER,
  ROADDISTANCE	DOUBLE,
  ROADTYPE	INTEGER,
  HOUSEAREA	DOUBLE,
  UNSAFEHOUSE	INTEGER,
  LOWINSURE	DOUBLE,
  AGEDINSURE	DOUBLE,
  ECOAMOUNT	DOUBLE,
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(100),
  RECORDER	VARCHAR(15),
  RECORDTIME	TIMESTAMP(12),
  STANDARD	INTEGER,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER ( 
	FARMERID IS '农户基本信息表主键',
	FARMERNAME IS '农户姓名',
	FARMERIDNUM IS '身份证编号',
	SEX IS '性别',
	MARRYSTATUS IS '婚姻状况',
	POLITICSTATUS IS '政治面貌',
	EDUCATION IS '学历',
	PHONE IS '联系电话',
	BANK IS '开户银行',
	ACCOUNT IS '开户银行账户',
	FAMILYNUM IS '家庭人数',
	LABORNUM IS '劳动力人数',
	POSTCODE IS '邮政编码',
	IDTYPE IS '证件类型',
	OCCUPATION IS '职业',
	VILLAGES IS '所属乡镇',
	ADDRESS IS '现住址',
	FARMERTYPE IS '农户类型',
	POORTYPE IS '贫困户属性',
	POORREASON IS '主要致贫原因',
	PLOUGHAREA IS '耕地面积',
	WATERINGAREA IS '灌溉面积',
	FORESTAREA IS '林地面积',
	FORESTAREA1 IS '退耕还林面积',
	FRUITAREA IS '林果面积',
	MEADOWAREA IS '牧地面积',
	WATERAREA IS '水面面积',
	DRINKINGHARD IS '饮水是否困难',
	DRINKINGSAFE IS '饮水是否安全',
	USINGELECTRIC IS '是否通生活用电',
	USINGTOILET IS '有无卫生厕所',
	FUELTYPE IS '燃料类型',
	USINGARTEL IS '是否加入农民合作社',
	NETINCOME IS '家庭年度纯收入',
	WAGESINCOME IS '全家工资性收入',
	OPERATEINCOME IS '全家生产经营性收入',
	SUBSIDYINCOME IS '补贴收入',
	USINGTELEVISION IS '是否通广播电视',
	ROADDISTANCE IS '距离村主干公路',
	ROADTYPE IS '入户路类型',
	HOUSEAREA IS '住房面积',
	UNSAFEHOUSE IS '主要住房是否是危房',
	LOWINSURE IS '领取低保金',
	AGEDINSURE IS '领取养老保险金',
	ECOAMOUNT IS '生态补偿金',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间',
	STANDARD IS '贫困识别标准',
	SOURCECODE IS '数据源编码',
	SOURCENAME IS '数据源名称' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_ASSIST (
  ASSISTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  ASSISTNAME	VARCHAR(500),
  AREATYPE	INTEGER,
  PHONE	VARCHAR(50)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_ASSIST
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_ASSIST ( 
	ASSISTNAME IS '帮扶单位名称',
	AREATYPE IS '所属单位',
	PHONE IS '联系电话' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_ASSIST
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_BREED (
  BREEDID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  VARIETY	VARCHAR(100),
  FLOORAREA	VARCHAR(20),
  OUTPUT	VARCHAR(10),
  OUTPUTVALUE	DOUBLE,
  ASSESSPRICE	DOUBLE,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_BREED
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_BREED ( 
	BREEDID IS '种养殖表主表主键',
	FARMERID IS '农户主键',
	VARIETY IS '种养殖品种',
	FLOORAREA IS '占地面积',
	OUTPUT IS '年产量',
	OUTPUTVALUE IS '年产值',
	ASSESSPRICE IS '当前评估价格',
	SOURCECODE IS '数据来源编码',
	SOURCENAME IS '数据来源名称',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_BREED
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_COMPUNISH (
  COMPUNISHID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  ORGAN	VARCHAR(80),
  DETAIL	VARCHAR(1000),
  OCCURTIME	TIMESTAMP(12),
  TYPE	INTEGER,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(50),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_COMPUNISH
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_COMPUNISH ( 
	COMPUNISHID IS '农户受处罚信息表主键',
	FARMERID IS '农户姓名',
	ORGAN IS '处罚部门',
	DETAIL IS '处罚内容',
	OCCURTIME IS '处罚时间',
	TYPE IS '表彰或处罚',
	SOURCECODE IS '数据来源编码',
	SOURCENAME IS '数据来源名称',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_COMPUNISH
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_CREDIT (
  CREDITID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERNAME	VARCHAR(10),
  FARMERIDNUM	VARCHAR(20),
  ASSESSDATE	DATE,
  ASSESSRANK	VARCHAR(10),
  ASSESSORGAN	VARCHAR(80),
  TIMELIMIT	VARCHAR(10),
  SOURCECODE	VARCHAR(10),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(50),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_CREDIT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_CREDIT ( 
	CREDITID IS '农户信用参保情况表主键',
	FARMERNAME IS '农户姓名',
	FARMERIDNUM IS '农户身份证号码',
	ASSESSDATE IS '信用户评定时间',
	ASSESSRANK IS '信用户级别',
	ASSESSORGAN IS '信用户评定部门',
	TIMELIMIT IS '有效期限',
	SOURCECODE IS '数据来源编码',
	SOURCENAME IS '数据来源名称',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_CREDIT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_DEVICE (
  DEVICEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT	NOT NULL,
  NAME	VARCHAR(100),
  BRAND	VARCHAR(80),
  BUYINGPRICE	VARCHAR(20),
  BUYINGDATE	VARCHAR(50),
  ASSESSPRICE	VARCHAR(20),
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(50),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_DEVICE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_DEVICE ( 
	DEVICEID IS '农户设备表主键',
	FARMERID IS '农户身份证号',
	NAME IS '设备名称',
	BRAND IS '设备品牌型号',
	BUYINGPRICE IS '购建价格',
	BUYINGDATE IS '购进年份',
	ASSESSPRICE IS '当前评估价格',
	SOURCECODE IS '数据来源编码',
	SOURCENAME IS '数据来源名称',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_DEVICE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_EVALUATE (
  EVALUATEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  PERSONALITY	VARCHAR(500),
  HARMONYSTATUS	VARCHAR(500),
  RESPECTSTATUS	VARCHAR(500),
  NEIGHBORSTATUS	VARCHAR(500),
  LEGALSTATUS	INTEGER,
  WELFARESTATUS	VARCHAR(500),
  HONESTSTATUS	INTEGER,
  OTHERSTATUS	VARCHAR(500),
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(50),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_EVALUATE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_EVALUATE ( 
	EVALUATEID IS '村民居委会对农户家庭评价情况',
	PERSONALITY IS '人品综合评价',
	HARMONYSTATUS IS '家庭和睦情况',
	RESPECTSTATUS IS '尊老爱幼情况',
	NEIGHBORSTATUS IS '邻里团结情况',
	LEGALSTATUS IS '是否遵纪守法',
	WELFARESTATUS IS '对公益事业关心程度',
	HONESTSTATUS IS '是否诚实守信',
	OTHERSTATUS IS '其他',
	SOURCECODE IS '数据来源编码',
	SOURCENAME IS '数据来源名称',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_EVALUATE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_FOREST (
  FORESTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  CARDNUM	VARCHAR(20),
  WORDNUM	VARCHAR(20),
  USER	VARCHAR(20),
  USETYPE	VARCHAR(20),
  AREA	VARCHAR(20),
  STORENUM	VARCHAR(20),
  TIMELIMIT	VARCHAR(20),
  ASSESSPRICE	VARCHAR(20),
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_FOREST
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_FOREST ( 
	FORESTID IS '林权情况表主键',
	FARMERID IS '农户姓名',
	CARDNUM IS '林权证编号',
	WORDNUM IS '林权字号',
	USER IS '林权使用人',
	USETYPE IS 'l林权使用种类',
	AREA IS '面积',
	STORENUM IS '蓄积量',
	TIMELIMIT IS '使用权期限',
	ASSESSPRICE IS '当前评估价格' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_FOREST
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_HOUSE (
  HOUSEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  HOUSEPROPERTY	VARCHAR(30),
  HOUSETYPE	VARCHAR(30),
  HOUSEADDRESS	VARCHAR(50),
  BUILDAREA	VARCHAR(30),
  BUILDDATE	VARCHAR(50),
  BUILDPRICE	VARCHAR(30),
  FLOORAREA	VARCHAR(30),
  ASSESSPRICE	VARCHAR(30),
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_HOUSE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_HOUSE ( 
	HOUSEID IS '房产情况表主键',
	FARMERID IS '农户姓名',
	HOUSEPROPERTY IS '房产性质',
	HOUSETYPE IS '房产类型',
	HOUSEADDRESS IS '房屋地址',
	BUILDAREA IS '建筑面积',
	BUILDDATE IS '购建年份',
	BUILDPRICE IS '购建价格',
	FLOORAREA IS '占地面积',
	ASSESSPRICE IS '当前评估价格' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_HOUSE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_INCOME (
  INCOMEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  PAYID	BIGINT,
  INCOMENAME	VARCHAR(80),
  INCOMETYPE	INTEGER,
  NETINCOME	VARCHAR(30),
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_INCOME
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_INCOME ( 
	INCOMEID IS '农户收入表主键',
	PAYID IS '农户姓名',
	INCOMENAME IS '收入项目名称',
	INCOMETYPE IS '收入项目类型',
	NETINCOME IS '年度净收入' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_INCOME
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_INSURED (
  INSUREDID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  NAME	VARCHAR(20),
  TYPE	INTEGER,
  AMOUNT	DOUBLE,
  INSURETIME	DATE,
  LIMITTIME	DATE,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_INSURED
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_INSURED ( 
	INSUREDID IS '农户参保情况表主键',
	FARMERID IS '农户身份证号码',
	NAME IS '参保人姓名',
	TYPE IS '参加保险种类',
	AMOUNT IS '参保金额',
	INSURETIME IS '参保时间',
	LIMITTIME IS '参保到期日' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_INSURED
	ALLOW WRITE ACCESS;

-- Step 1. Sync
CREATE TABLE BANK.T_FARMER_LOAN (
  LOANID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  CLIENTNUM	VARCHAR(50),
  NOTENUM	VARCHAR(50)	NOT NULL,
  COMPACTNUM	VARCHAR(50),
  LOANDATE	VARCHAR(80),
  LIMITDATE	VARCHAR(80),
  LIMITDATE1	VARCHAR(80),
  CURRENCY	VARCHAR(80),
  AMOUNT	VARCHAR(50),
  BALANCE	VARCHAR(50),
  OWEINTEREST	VARCHAR(50),
  CURRENTRATE	VARCHAR(50),
  CLIENTNAME	VARCHAR(200),
  CLIENTTYPE	VARCHAR(50),
  IDTYPE	VARCHAR(50),
  IDNUM	VARCHAR(50),
  PHONE	VARCHAR(50),
  ADDRESS	VARCHAR(200),
  RATETYPE	VARCHAR(20),
  LOANUSE	VARCHAR(400),
  GUARANTEETYPE1	VARCHAR(50),
  GRADE	VARCHAR(50),
  GRADE1	VARCHAR(50),
  SETTLETYPE	VARCHAR(50),
  CHARGEPERSON	VARCHAR(50),
  ORGANCODE	VARCHAR(50),
  ORGANNAME	VARCHAR(100),
  BUSINESSTYPE	VARCHAR(80),
  BUSINESSBODY	VARCHAR(50),
  PROVIDETYPE	VARCHAR(80),
  INVEST	VARCHAR(200),
  TERMTYPE	VARCHAR(80),
  GUARANTEETYPE	VARCHAR(80),
  FLOATSCOPE	VARCHAR(50),
  ADJUSTTYPE	VARCHAR(80),
  RUNTYPE	VARCHAR(80),
  FREQUEENCY	VARCHAR(50),
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(100),
  RECORDER	VARCHAR(20),
  RECORDTIME	DATE,
  CLIENTID	BIGINT
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_LOAN
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_LOAN ( 
	LOANID IS '主键',
	FARMERID IS '农户主键',
	CLIENTNUM IS '客户号',
	NOTENUM IS '借据号',
	COMPACTNUM IS '合同号',
	LOANDATE IS '贷款日期',
	LIMITDATE IS '到期日期',
	LIMITDATE1 IS '原到期日期',
	CURRENCY IS '币种',
	AMOUNT IS '贷款金额',
	BALANCE IS '贷款余额',
	OWEINTEREST IS '节欠利息',
	CURRENTRATE IS '当前利率',
	CLIENTNAME IS '客户姓名',
	CLIENTTYPE IS '客户类型',
	IDTYPE IS '证件类型',
	IDNUM IS '身份证号码',
	PHONE IS '联系电话',
	ADDRESS IS '地址',
	RATETYPE IS '利率类型',
	LOANUSE IS '贷款用途',
	GUARANTEETYPE1 IS '担保方式',
	GRADE IS '贷款五级分类形态',
	GRADE1 IS '贷款十级分类形态',
	SETTLETYPE IS '结息方式',
	CHARGEPERSON IS '管理负责人',
	BUSINESSTYPE IS '业务种类',
	BUSINESSBODY IS '业务主体',
	PROVIDETYPE IS '贷款发放类型',
	INVEST IS '贷款投向',
	TERMTYPE IS '贷款期限种类',
	GUARANTEETYPE IS '担保方式',
	FLOATSCOPE IS '利率浮动范围',
	ADJUSTTYPE IS '利率浮动范围',
	RUNTYPE IS '利率执行方式',
	FREQUEENCY IS '还款频率',
	SOURCECODE IS '数据来源编码',
	SOURCENAME IS '数据来源名称',
	RUNITID IS '记录单位编码',
	RUNITNAME IS '记录单位名称',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

-- Step 2. Restoring constraints and indexes
ALTER TABLE BANK.T_FARMER_LOAN
  ADD CONSTRAINT PK_T_LOAN PRIMARY KEY
    (LOANID)
    NOT ENFORCED;

COMMIT;

-- Step 3. Runstats
RUNSTATS ON TABLE BANK.T_FARMER_LOAN
	ALLOW WRITE ACCESS;
CREATE TABLE BANK.T_FARMER_MEMBER (
  MEMBERID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  NAME	VARCHAR(10),
  RELATION	VARCHAR(10),
  IDNUM	VARCHAR(20),
  EDUCATION	INTEGER,
  MARRYSTATUS	VARCHAR(10),
  OCCUPATION	VARCHAR(100),
  JOB	VARCHAR(100),
  SEX	INTEGER,
  PHONE	VARCHAR(20),
  ADDRESS	VARCHAR(300),
  HEALTHSTATE	VARCHAR(200),
  LABOURSTATE	INTEGER,
  USINGMEDICAL	INTEGER,
  USINGINUSE	INTEGER,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_MEMBER
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_MEMBER ( 
	MEMBERID IS '农户家庭成员信息表主键',
	FARMERID IS '农户姓名',
	NAME IS '家庭成员姓名',
	RELATION IS '与户主关系',
	IDNUM IS '身份证号',
	EDUCATION IS '文化程度',
	MARRYSTATUS IS '婚姻状况',
	OCCUPATION IS '职业',
	JOB IS '职务',
	SEX IS '性别',
	PHONE IS '联系电话',
	ADDRESS IS '地址',
	HEALTHSTATE IS '健康状况',
	LABOURSTATE IS '劳动能力',
	USINGMEDICAL IS '是否参加新型农村合作医疗',
	USINGINUSE IS '是否参加城乡居民基本 养老保险' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_MEMBER
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_NONELENDING (
  NONLENDINGID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERNAME	VARCHAR(20),
  FARMERIDNUM	VARCHAR(20),
  BORROWAMOUNT	DOUBLE,
  LOANAMOUNT	DOUBLE,
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_NONELENDING
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_NONELENDING ( 
	NONLENDINGID IS '农户民间借贷情况表主键',
	FARMERNAME IS '农户姓名',
	FARMERIDNUM IS '农户身份证号',
	BORROWAMOUNT IS '民间借入金额合计',
	LOANAMOUNT IS '民间贷出金额合计',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_NONELENDING
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_FARMER_PAY (
  PAYID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  YEAR	TIMESTAMP(1),
  FARMINGINCOME	DOUBLE,
  AVOCATIONINCOME	DOUBLE,
  BUSINESSINCOME	DOUBLE,
  WORKINCOME	DOUBLE,
  OTHERINCOME	DOUBLE,
  TOTALINCOME	DOUBLE,
  PRODUCTPAY	DOUBLE,
  LIVINGPAY	DOUBLE,
  MEDICALPAY	DOUBLE,
  EDUCATEPAY	DOUBLE,
  INSUREDPAY	DOUBLE,
  OTHERPAY	DOUBLE,
  TOTALPAY	DOUBLE,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_PAY
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_PAY ( 
	PAYID IS '家庭支出情况表主键',
	FARMERID IS '户主表主键',
	YEAR IS '年份',
	FARMINGINCOME IS '主要农作物年度净收入合计',
	AVOCATIONINCOME IS '家庭林、牧、副、渔业收入年度净收入合计',
	BUSINESSINCOME IS '家庭工商业收入年度净收入',
	WORKINCOME IS '外出务工收入',
	OTHERINCOME IS '其他收入年度净收入',
	TOTALINCOME IS '家庭年度总收入合计',
	PRODUCTPAY IS '生产支出',
	LIVINGPAY IS '生活支出',
	MEDICALPAY IS '医疗支出',
	EDUCATEPAY IS '教育支出',
	INSUREDPAY IS '参保支出',
	OTHERPAY IS '其他支出',
	TOTALPAY IS '总支出' );

COMMIT;

RUNSTATS ON TABLE BANK.T_FARMER_PAY
	ALLOW WRITE ACCESS;

-- Step 1. Sync
CREATE TABLE BANK.T_FARMER_PRIVATELENDING (
  LENDINGID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  FARMERID	BIGINT,
  AMOUNT	DOUBLE,
  LENDINGTIME	DATE,
  LIMITTIME	DATE,
  RATE	DOUBLE,
  SOURCECODE	VARCHAR(50),
  SOURCENAME	VARCHAR(200),
  RUNITID	VARCHAR(50),
  RUNITNAME	VARCHAR(200),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_FARMER_PRIVATELENDING
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_FARMER_PRIVATELENDING ( 
	AMOUNT IS '借款金额',
	LENDINGTIME IS '借款时间',
	LIMITTIME IS '到期时间',
	RATE IS '利率' );

-- Step 2. Restoring constraints and indexes
ALTER TABLE BANK.T_FARMER_PRIVATELENDING
  ADD CONSTRAINT PK_T_FARMER_PRIVATELENDING PRIMARY KEY
    (LENDINGID)
    NOT ENFORCED;

COMMIT;

-- Step 3. Runstats
RUNSTATS ON TABLE BANK.T_FARMER_PRIVATELENDING
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_MENU_PRIVILEGE (
  PKID	VARCHAR(40)	NOT NULL,
  ROLE_ID	VARCHAR(40),
  MENU_ID	VARCHAR(40),
  PRIVILEGE_ID	VARCHAR(40)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_MENU_PRIVILEGE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_MENU_PRIVILEGE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_MESSAGE (
  MESSAGEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  USERID	VARCHAR(50),
  USERNAME	VARCHAR(25),
  TITLE	VARCHAR(200),
  PUBLISHDATE	DATE,
  CONTENT	VARCHAR(1000)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_MESSAGE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_MESSAGE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_MESSAGE_READER (
  READERID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  MESSAGEID	BIGINT,
  USERID	VARCHAR(50),
  USERNAME	VARCHAR(100),
  READTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_MESSAGE_READER
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_MESSAGE_READER
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_ORGAN (
  ORGAN_ID	VARCHAR(40)	NOT NULL,
  ORGAN_NAME	VARCHAR(40),
  ORGAN_PID	VARCHAR(40),
  ORGAN_SHORT	VARCHAR(40),
  ORGAN_TYPE	VARCHAR(10),
  ORGAN_NO	VARCHAR(100),
  SEQ	INTEGER
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_ORGAN
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_ORGAN ( 
	ORGAN_TYPE IS '组织机构类型',
	ORGAN_NO IS '组织机构编码' );

COMMIT;

RUNSTATS ON TABLE BANK.T_ORGAN
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_PRIVILEGE (
  PRIVILEGE_ID	VARCHAR(40)	NOT NULL,
  PRIVILEGE_TYPE	VARCHAR(40)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_PRIVILEGE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_PRIVILEGE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_ROLE (
  ROLE_ID	VARCHAR(40)	NOT NULL,
  ROLE_DESCR	VARCHAR(200),
  ROLE_NAME	VARCHAR(100)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_ROLE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_ROLE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_SYS_DIC (
  DICID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  DICTYPE	VARCHAR(20),
  DICNAME	VARCHAR(100),
  DICVALUE	VARCHAR(25)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_SYS_DIC
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_SYS_DIC
	ALLOW WRITE ACCESS;

-- Step 1. Sync
CREATE TABLE BANK.T_SYS_MENU (
  MENU_ID	INTEGER	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  MENU_DESCR	VARCHAR(200),
  MENU_URL	VARCHAR(400),
  MENU_PID	INTEGER,
  MENU_NAME	VARCHAR(40),
  ISLEAF	CHARACTER(10),
  ISSYSTEM	CHARACTER(10),
  SEQ	INTEGER
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_SYS_MENU
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

-- Step 2. Restoring constraints and indexes
ALTER TABLE BANK.T_SYS_MENU
  ADD CONSTRAINT PK_T_SYS_MENU PRIMARY KEY
    (MENU_ID)
    ENFORCED;

COMMIT;

-- Step 3. Runstats
RUNSTATS ON TABLE BANK.T_SYS_MENU
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_USER (
  USER_ID	VARCHAR(40)	NOT NULL,
  USER_NAME	VARCHAR(40),
  PASSWORD	VARCHAR(40),
  SEX	INTEGER,
  BIRTHDAY	DATE,
  ADDRESS	VARCHAR(100),
  ORGAN_ID	VARCHAR(40),
  USER_CNNAME	VARCHAR(40),
  ISADMIN	VARCHAR(10),
  UNIT_ID	VARCHAR(40)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_USER
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_USER ( 
	USER_ID IS '用户ID',
	USER_NAME IS '用户名',
	USER_CNNAME IS '员工姓名',
	ISADMIN IS '是否为管理员' );

COMMIT;

RUNSTATS ON TABLE BANK.T_USER
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_USER_ROLE (
  USER_ID	VARCHAR(40)	NOT NULL,
  ROLE_ID	VARCHAR(40)	NOT NULL
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_USER_ROLE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_USER_ROLE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_BANK_APPLY (
  APPLYID	BIGINT,
  USERID	VARCHAR(40),
  USERNAME	VARCHAR(25),
  APPLYTYPE	VARCHAR(100),
  APPLYTIME	DATE,
  APPLYINFO	VARCHAR(2000),
  APPLYNAME	VARCHAR(100)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_BANK_APPLY
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

RUNSTATS ON TABLE BANK.T_BANK_APPLY
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMAPNY_FINANCE (
  FINANCEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  REPORTORGAN	VARCHAR(80),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  TAXCODE	VARCHAR(20),
  OCCUR_YEAR	INTEGER,
  STAGETYPE	VARCHAR(20),
  RECEIVEDEBT_AMOUNT	VARCHAR(20),
  RECEIVEDEBT_TYPE	INTEGER,
  PAYABLE_AMOUNT	VARCHAR(20),
  PAYABLE_TYPE	INTEGER,
  INVENTORYNAME	VARCHAR(40),
  INVENTORYCOST	VARCHAR(20),
  INVENTORYTIME	VARCHAR(10),
  INVENTORYREASON	VARCHAR(100),
  INVENTORYVALUE	VARCHAR(20),
  RECORDER	VARCHAR(10),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMAPNY_FINANCE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMAPNY_FINANCE ( 
	FINANCEID IS '企业经营财务补充信息表',
	REPORTORGAN IS '数据报送机构',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	TAXCODE IS '税务识别码',
	OCCUR_YEAR IS '数据发生年份',
	STAGETYPE IS '其别类型',
	RECEIVEDEBT_AMOUNT IS '应收账款金额',
	RECEIVEDEBT_TYPE IS '应收账款类型',
	PAYABLE_AMOUNT IS '应付账款金额',
	PAYABLE_TYPE IS '应付账款类型',
	INVENTORYNAME IS '存货名称',
	INVENTORYCOST IS '存货金额',
	INVENTORYTIME IS '存货时间',
	INVENTORYREASON IS '存货原因',
	INVENTORYVALUE IS '存货可变现净值',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMAPNY_FINANCE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY (
  COMPANYID	INTEGER	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  COMPANYCATEGORY	VARCHAR(10),
  COMPANYFEATURE	INTEGER,
  COMPANYNATURE	INTEGER,
  MAILINGADDRESS	VARCHAR(80),
  REGISTERADDRESS	VARCHAR(80),
  REGISTERDATE	DATE,
  REGISTERTYPE	INTEGER,
  POSTCODE	INTEGER,
  TELEPHONE	VARCHAR(35),
  FAX	VARCHAR(35),
  EMAIL	VARCHAR(30),
  EMPLOYEES	INTEGER,
  PRODUCTS	VARCHAR(50),
  BUSINESSSCOPE	VARCHAR(100),
  LOCATIONAREA	INTEGER,
  LOCALTIONOWNERSHIP	INTEGER,
  DEPOSITBANK	VARCHAR(50),
  REGIONALISM	INTEGER,
  TAXIDENTIFER	VARCHAR(20),
  LOCALIDENTIFER	VARCHAR(10),
  ORGANCODE	VARCHAR(10),
  CREDITCODE	VARCHAR(20),
  LOANCARDCODE	VARCHAR(16),
  BUSINESSCODE	VARCHAR(20),
  BUSINESSISSUER	VARCHAR(80),
  BUSINESSCHKDATE	DATE,
  BUSINESSLICENCEEND	DATE,
  LOCALTAXCODE	VARCHAR(20),
  LOCALTAXISSUER	VARCHAR(80),
  LOCALTAXEND	DATE,
  CHINATAXCODE	VARCHAR(20),
  CHINATAXISSUER	VARCHAR(80),
  CHINATAXEND	DATE,
  RECORDER	VARCHAR(15),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY ( 
	COMPANYID IS '主键',
	COMPANYNAME IS '企业名称',
	COMPANYCATEGORY IS '行业分类',
	COMPANYFEATURE IS '企业特征',
	COMPANYNATURE IS '企业性质',
	MAILINGADDRESS IS '企业通信地址',
	REGISTERADDRESS IS '企业注册地址',
	REGISTERDATE IS '企业注册等级日期',
	REGISTERTYPE IS '等级注册类型',
	POSTCODE IS '邮政编码',
	TELEPHONE IS '联系电话',
	FAX IS '传真号码',
	EMAIL IS '电子邮箱',
	EMPLOYEES IS '从业人数',
	PRODUCTS IS '经营产品',
	BUSINESSSCOPE IS '经营范围',
	LOCATIONAREA IS '经营场地面积',
	LOCALTIONOWNERSHIP IS '经营场地房产所有权',
	DEPOSITBANK IS '基本户开户行',
	REGIONALISM IS '行政区划',
	TAXIDENTIFER IS '税务识别码',
	LOCALIDENTIFER IS '地区识别码',
	ORGANCODE IS '组织机构代码',
	CREDITCODE IS '机构信用代码',
	LOANCARDCODE IS '贷款卡编码',
	BUSINESSCODE IS '工商登记注册号',
	BUSINESSISSUER IS '工商登记注册号发证机构',
	BUSINESSCHKDATE IS '工商登记注册号上次年检时间',
	BUSINESSLICENCEEND IS '营业执照到期日',
	LOCALTAXCODE IS '地税登记证号码',
	LOCALTAXISSUER IS '地税登记证发证机构',
	LOCALTAXEND IS '地税登记证到期日',
	CHINATAXCODE IS '国税登记证号码',
	CHINATAXISSUER IS '国税登记证发证机构',
	CHINATAXEND IS '国税登记证到期日',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_ACCOUNTPERMIT (
  PERMITID	BIGINT,
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  DATATIME	VARCHAR(20),
  DATAUNIT	VARCHAR(50),
  LEGALPERSON	VARCHAR(20),
  BANKNAME	VARCHAR(30),
  RATIFYNUMBER	VARCHAR(20),
  PERMITTIME	DATE,
  REMARK	VARCHAR(1000),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_ACCOUNTPERMIT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_ACCOUNTPERMIT IS '企业基本户开户信息';

COMMENT ON BANK.T_COMPANY_ACCOUNTPERMIT ( 
	PERMITID IS '企业基本存款账户开户许可信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	DATATIME IS '数据时间',
	DATAUNIT IS '数据单位',
	LEGALPERSON IS '法人代表',
	BANKNAME IS '开户银行',
	RATIFYNUMBER IS '开户行核准号',
	PERMITTIME IS '许可时间',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_ACCOUNTPERMIT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_AFFIRM (
  AFFIRMID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  DATATIME	VARCHAR(20),
  DATAUNIT	VARCHAR(20),
  AFFIRMTIME	DATE,
  AFFIRMNAME	VARCHAR(50),
  AFFIRMUNIT	VARCHAR(50),
  VALIDENDTIME	DATE,
  REMARK	VARCHAR(1000),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_AFFIRM
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_AFFIRM IS '企业认定认证信息';

COMMENT ON BANK.T_COMPANY_AFFIRM ( 
	AFFIRMID IS '企业认证认定信息',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	DATATIME IS '数据时间',
	DATAUNIT IS '数据单位',
	AFFIRMTIME IS '认证/认定时间',
	AFFIRMNAME IS '认证/认定名称',
	AFFIRMUNIT IS '认证/认定单位',
	VALIDENDTIME IS '有效截止日期',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_AFFIRM
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_AUDIT (
  AUDITID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  DATATIME	VARCHAR(10),
  DATAUNIT	VARCHAR(20),
  AUDITTIME	DATE,
  AUDITNAME	VARCHAR(20),
  VALIDENDTIME	DATE,
  REMARK	VARCHAR(100),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_AUDIT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_AUDIT ( 
	AUDITID IS '企业年审信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	DATATIME IS '数据时间',
	DATAUNIT IS '数据单位',
	AUDITTIME IS '年审时间',
	AUDITNAME IS '年审证件名称',
	VALIDENDTIME IS '有效截止日期',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_AUDIT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_CAPITAL (
  CAPITALID	INTEGER	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYID	INTEGER,
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  REGISTERCAPITAL	INTEGER,
  CURRENCY	VARCHAR(6),
  REALCAPITAL	INTEGER,
  CAPITALCHKNUM	VARCHAR(20),
  INVESTOR	VARCHAR(80),
  BUSINESSCODE	VARCHAR(20),
  IDTYPE	VARCHAR(5),
  IDNUMBER	VARCHAR(18),
  INVESTAMOUNT	VARCHAR(8),
  INVESTSTYLE	VARCHAR(100),
  INVESTDATE	DATE,
  EVALUATEORGAN	VARCHAR(80),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_CAPITAL
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_CAPITAL ( 
	CAPITALID IS '资本表主键',
	COMPANYID IS '企业表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构代码',
	CREDITCODE IS '机构信用代码',
	REGISTERCAPITAL IS '注册资本金额',
	CURRENCY IS '币种',
	REALCAPITAL IS '实缴资本金额',
	CAPITALCHKNUM IS '最近一次验资报告文号',
	INVESTOR IS '出资人名称',
	BUSINESSCODE IS '工商等级注册号',
	IDTYPE IS '证件类型',
	IDNUMBER IS '证件号码',
	INVESTAMOUNT IS '出资金额',
	INVESTSTYLE IS '出资方式',
	INVESTDATE IS '出资日期',
	EVALUATEORGAN IS '资产评估机构',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_CAPITAL
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_CHANGE (
  CHANGEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  DATATIME	VARCHAR(20),
  DATAUNIT	VARCHAR(20),
  CHANGETIME	DATE,
  CHANGEITEMS	VARCHAR(20),
  BEFORECHANGE	VARCHAR(1000),
  AFTERCHANGE	VARCHAR(1000),
  REMARK	VARCHAR(1000),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_CHANGE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_CHANGE IS '企业变更信息';

COMMENT ON BANK.T_COMPANY_CHANGE ( 
	CHANGEID IS '企业变更信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	DATATIME IS '数据时间',
	DATAUNIT IS '数据单位',
	CHANGETIME IS '变更时间',
	CHANGEITEMS IS '变更事项',
	BEFORECHANGE IS '变更前',
	AFTERCHANGE IS '变更后',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_CHANGE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_COMMEND (
  COMMENDID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  COMMENDDEPT	INTEGER,
  COMMENDDETAIL	VARCHAR(100),
  COMMANDDECLARE	VARCHAR(100),
  COMMANDDATE	DATE,
  QUALIFICATION	VARCHAR(100),
  REMARK	VARCHAR(1000),
  RECORDER	VARCHAR(10),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_COMMEND
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_COMMEND ( 
	COMMENDID IS '企业受表彰情况',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	COMMENDDEPT IS '表彰部门',
	COMMENDDETAIL IS '表彰内容',
	COMMANDDECLARE IS '表彰说明',
	COMMANDDATE IS '表彰时间',
	QUALIFICATION IS '国际认证/特殊行业资质',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_COMMEND
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_COMPACT (
  COMPACTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(10),
  OCCUR_YEAR	TIMESTAMP(4),
  STAGETYPE	INTEGER,
  BUYTYPE	INTEGER,
  SELLTYPE	INTEGER,
  BUYNUM	INTEGER,
  BUYAMOUNT	VARCHAR(30),
  REAL_BUYAMOUNT	VARCHAR(30),
  SELLNUM	INTEGER,
  SELLAMOUNT	VARCHAR(30),
  REAL_SELLAMOUNT	VARCHAR(30),
  RECORDER	VARCHAR(10),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_COMPACT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_COMPACT ( 
	COMPACTID IS '企业购销合同情况表',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	OCCUR_YEAR IS '数据发生年份',
	STAGETYPE IS '其别类型',
	BUYTYPE IS '采购支付方式',
	SELLTYPE IS '销售收款方式',
	BUYNUM IS '采购合同数量',
	BUYAMOUNT IS '采购合同金额',
	REAL_BUYAMOUNT IS '实际采购支出',
	SELLNUM IS '销售合同数量',
	SELLAMOUNT IS '销售合同金额',
	REAL_SELLAMOUNT IS '实际销售收入',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_COMPACT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_COURT (
  COURTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_COURT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_COURT ( 
	COURTID IS '企业法院执行信息表主键' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_COURT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_CREDIT (
  CREDITID	INTEGER,
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  OCCURYEAR	VARCHAR(4),
  ISSUETYPE	INTEGER,
  PAYTYPE	INTEGER,
  GATHERINGTYPE	INTEGER,
  PURCHASENUM	INTEGER,
  PURCHASEAMOUNT	VARCHAR(10),
  REALPAY	VARCHAR(10),
  SELLNUM	INTEGER,
  SELLAMOUNT	VARCHAR(10),
  REALSELL	VARCHAR(10),
  RECORDER	VARCHAR(20),
  RECORDTIME	DATE
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_CREDIT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_CREDIT ( 
	CREDITID IS '企业信用表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	OCCURYEAR IS '数据发生年份',
	ISSUETYPE IS '其别类型',
	PAYTYPE IS '主要采购支付方式',
	GATHERINGTYPE IS '主要销售收款方式',
	PURCHASENUM IS '采购合同数量',
	PURCHASEAMOUNT IS '采购合同金额',
	REALPAY IS '实际采购支出',
	SELLNUM IS '销售合同数量',
	SELLAMOUNT IS '销售合同金额',
	REALSELL IS '实际销售收入',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_CREDIT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_DEBT (
  DEBTID	BIGINT,
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  TAXCODE	VARCHAR(10),
  REPORTDATE	TIMESTAMP(4),
  REPORTORGAN	VARCHAR(20),
  MONETARYCAPITAL	VARCHAR(20),
  CURRENTINVEST	VARCHAR(10),
  RECEIVE_BILL	VARCHAR(20),
  DIVIDENDRECEIVABLE	VARCHAR(20),
  INTERESTRECEIVABLE	VARCHAR(20),
  DEBTRECEIVABLE	VARCHAR(20),
  OTHERDEBTRECEIVABLE	VARCHAR(20),
  PREPAYMENT	VARCHAR(20),
  ACCOUNTPREPAID	VARCHAR(20),
  ALLOWANCERECEIVABLE	VARCHAR(20),
  REBATESRECEIVABLE	VARCHAR(20),
  INVENTORY	VARCHAR(20),
  INVENTMATERIAL	VARCHAR(20),
  INVENTPRODUCT	VARCHAR(20),
  DEFERREDEXPENSES	VARCHAR(20),
  CURRENTASSETLOSS	VARCHAR(20),
  CREDITORINVEST	VARCHAR(20),
  OTHERFLOATCAPITAL	VARCHAR(20),
  FLOATCAPITALALL	VARCHAR(20),
  LONGINVEST	VARCHAR(20),
  LONGSTOCKINVEST	VARCHAR(20),
  LONGDEBTINVEST	VARCHAR(20),
  LONGINVESTALL	VARCHAR(20),
  FIXEDASSETORIGINAL	VARCHAR(20),
  DEPRECIATION	VARCHAR(20),
  FIXEDASSETNETVALUE	VARCHAR(20),
  FIXEDASSETDEVALUE	VARCHAR(20),
  FIXEDASSETNETAMOUNT	VARCHAR(20),
  FIXEDASSETCLEAR	VARCHAR(20),
  PROJECTMATERIAL	VARCHAR(20),
  BUILDINGPROJECT	VARCHAR(20),
  FIXEDASSETLOSS	VARCHAR(20),
  FIXEDASSETALL	VARCHAR(20),
  IAST	VARCHAR(20),
  IASTLANDUSE	VARCHAR(20),
  DEFERREDASSET	VARCHAR(20),
  ASSETREPAIR	VARCHAR(20),
  ASSETRIMPROVE	VARCHAR(20),
  OTHERLONGASSET	VARCHAR(20),
  ASSETSTORE	VARCHAR(20),
  IOASTALL	VARCHAR(20),
  DEFERREDTAX	VARCHAR(20),
  ASSETALL	VARCHAR(20),
  SHORTLOAN	VARCHAR(20),
  BILLPAYABLE	VARCHAR(20),
  ACCOUNTPAYABLE	VARCHAR(20),
  DEPOSITRECEIVED	VARCHAR(20),
  WAGESPAYABLE	VARCHAR(20),
  WELFAREPAYABLE	VARCHAR(20),
  PROFITPAYABLE	VARCHAR(20),
  TAXPAYABLE	VARCHAR(20),
  OTHERTAXDUE	VARCHAR(20),
  OTHERTAXPAYABLE	VARCHAR(20),
  ACCRUEDEXPENSE	VARCHAR(20),
  ACCRUEDLIABILITY	VARCHAR(20),
  LONGLIABILITY	VARCHAR(20),
  OTHERFLOATLIBILITY	VARCHAR(20),
  FLOATLIBILITYALL	VARCHAR(20),
  LONGLOAN	VARCHAR(20),
  BONDSPAYABLE	VARCHAR(20),
  LONGPAYABLE	VARCHAR(20),
  SPECIALPAYABLE	VARCHAR(20),
  OTHERLONGDEBT	VARCHAR(20),
  OTHERLONGDEBTFUND	VARCHAR(20),
  OTHERLONGDEBTALL	VARCHAR(20),
  DEFFERREDTAXCREDIT	VARCHAR(20),
  LIABILITYALL	VARCHAR(20),
  MINORITYEQUITY	VARCHAR(20),
  REALCAPITAL	VARCHAR(20),
  NATIONCAPITAL	VARCHAR(20),
  GROUPCAPITAL	VARCHAR(20),
  PERSONLEGALCAPITAL	VARCHAR(20),
  NATIONLEGALCAPITAL	VARCHAR(20),
  GROUPCLEGALAPITAL	VARCHAR(20),
  PERSONCAPITAL	VARCHAR(20),
  FOREIGNCAPITAL	VARCHAR(20),
  CAPITALRESERVE	VARCHAR(20),
  SURPLUSRESERVE	VARCHAR(20),
  LEGALRESERVE	VARCHAR(20),
  WELFAREFUND	VARCHAR(20),
  ADDEDFLOWRESERVE	VARCHAR(20),
  CAPITALLOSS	VARCHAR(20),
  UNDISTRIBUTEDPROFIT	VARCHAR(20),
  TRANSLATIONRESERVE	VARCHAR(20),
  EQUITYALL	VARCHAR(20),
  EQUITYALL1	VARCHAR(20)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_DEBT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_DEBT ( 
	DEBTID IS '企业资产负债表主表',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用代码',
	TAXCODE IS '税务识别码',
	REPORTDATE IS '统计年月',
	REPORTORGAN IS '数据报送机构',
	MONETARYCAPITAL IS '货币资金',
	CURRENTINVEST IS '短期投资',
	RECEIVE_BILL IS '应收票据',
	DIVIDENDRECEIVABLE IS '应收股息',
	INTERESTRECEIVABLE IS '应收利息',
	DEBTRECEIVABLE IS '应收账款',
	OTHERDEBTRECEIVABLE IS '其他应收款',
	PREPAYMENT IS '预付账款',
	ACCOUNTPREPAID IS '期货保证金',
	ALLOWANCERECEIVABLE IS '应收补贴款',
	REBATESRECEIVABLE IS '应收出口退税',
	INVENTORY IS '存货',
	INVENTMATERIAL IS '存货原材料',
	INVENTPRODUCT IS '存货成产品',
	DEFERREDEXPENSES IS '待碳费用',
	CURRENTASSETLOSS IS '待处理流动资产损失',
	CREDITORINVEST IS '一年内到期的长期债权投资',
	OTHERFLOATCAPITAL IS '其他流动资产',
	FLOATCAPITALALL IS '流动资产合计',
	LONGINVEST IS '长期投资',
	LONGSTOCKINVEST IS '长期股权投资',
	LONGDEBTINVEST IS '长期债权投资',
	LONGINVESTALL IS '长期投资合计',
	FIXEDASSETORIGINAL IS '固定资产原价',
	DEPRECIATION IS '累计折旧',
	FIXEDASSETNETVALUE IS '固定资产净值',
	FIXEDASSETDEVALUE IS '固定资产减值准备',
	FIXEDASSETNETAMOUNT IS '固定资产净额',
	FIXEDASSETCLEAR IS '固定资产清理',
	PROJECTMATERIAL IS '工程物质',
	BUILDINGPROJECT IS '在建工程',
	FIXEDASSETLOSS IS '待处理固定资产净损失',
	FIXEDASSETALL IS '固定资产合计',
	IAST IS '无形资产',
	DEFERREDASSET IS '递延资产',
	ASSETREPAIR IS '递延资产固定资产修理',
	ASSETRIMPROVE IS '递延资产固定资产改良支出',
	OTHERLONGASSET IS '其他长期资产',
	ASSETSTORE IS '其他长期资产特准储备物资',
	IOASTALL IS '无形及其他资产合计',
	DEFERREDTAX IS '递延税款借项',
	ASSETALL IS '资产总计',
	SHORTLOAN IS '短期借款',
	BILLPAYABLE IS '应付票据',
	ACCOUNTPAYABLE IS '应付账款',
	DEPOSITRECEIVED IS '预收账款',
	WAGESPAYABLE IS '应付工资',
	WELFAREPAYABLE IS '应付福利费',
	PROFITPAYABLE IS '应付利润',
	TAXPAYABLE IS '应交税金',
	OTHERTAXDUE IS '其他应交款',
	OTHERTAXPAYABLE IS '其他应付款',
	ACCRUEDEXPENSE IS '预提费用',
	ACCRUEDLIABILITY IS '预计负债',
	LONGLIABILITY IS '一年内到期的长期负债',
	OTHERFLOATLIBILITY IS '其他流动负债',
	FLOATLIBILITYALL IS '流动负债合计',
	LONGLOAN IS '长期借款',
	BONDSPAYABLE IS '应付债券',
	LONGPAYABLE IS '长期应付款',
	SPECIALPAYABLE IS '专项应付款',
	OTHERLONGDEBT IS '其他长期负债',
	OTHERLONGDEBTFUND IS '其他长期负债特准储备基金',
	OTHERLONGDEBTALL IS '长期负债合计',
	DEFFERREDTAXCREDIT IS '递延税款贷项',
	LIABILITYALL IS '负债合计',
	MINORITYEQUITY IS '少数股东权益',
	REALCAPITAL IS '实收资本',
	NATIONCAPITAL IS '国家资本',
	GROUPCAPITAL IS '集体资本',
	PERSONLEGALCAPITAL IS '法人资本',
	NATIONLEGALCAPITAL IS '法人资本国有法人资本',
	GROUPCLEGALAPITAL IS '法人资本集体法人资本',
	PERSONCAPITAL IS '个人资本',
	FOREIGNCAPITAL IS '外商资本',
	CAPITALRESERVE IS '资本公积',
	SURPLUSRESERVE IS '盈余公积',
	LEGALRESERVE IS '法定盈余公积',
	WELFAREFUND IS '盈余公积公益金',
	ADDEDFLOWRESERVE IS '盈余公积补充流动资本',
	CAPITALLOSS IS '未确认的投资损失',
	UNDISTRIBUTEDPROFIT IS '未分配利润',
	TRANSLATIONRESERVE IS '外币报表折算差额',
	EQUITYALL IS '所有者权益合计',
	EQUITYALL1 IS '负债和所有者权益总计' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_DEBT
	ALLOW WRITE ACCESS;
CREATE TABLE BANK.T_COMPANY_EA (
  EAID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(20),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  EATIME	DATE,
  EALEVEL	VARCHAR(20),
  EAORGAN	VARCHAR(20),
  EAVALIDTIME	VARCHAR(20),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_EA
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_EA IS '企业环评信息';

COMMENT ON BANK.T_COMPANY_EA ( 
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	EATIME IS '环评时间',
	EALEVEL IS '环评等级',
	EAORGAN IS '环评机构',
	EAVALIDTIME IS '环评有效期',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_EA
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_EMPLOYEE (
  EMPLOYEEID	INTEGER	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  NAME	VARCHAR(20),
  SEX	INTEGER,
  BIRTHDAY	DATE,
  CATEGORY	INTEGER,
  IDTYPE	VARCHAR(10),
  IDNUMBER	VARCHAR(18),
  POST	INTEGER,
  POSTTIME	DATE,
  DEGREE	INTEGER,
  STOCKAMOUNT	INTEGER,
  SKILL	VARCHAR(100),
  SKILLWINTIME	DATE,
  PARTTIMEJOB	VARCHAR(10),
  WORKRESUME	VARCHAR(1000),
  AWARD	VARCHAR(1000),
  OTHERCOMPANYNAME	VARCHAR(80),
  OTHERREGISTERCODE	VARCHAR(20),
  OTHERPOST	VARCHAR(20),
  OTHERINVESTAMOUNT	INTEGER,
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_EMPLOYEE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_EMPLOYEE ( 
	EMPLOYEEID IS '企业高管表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构代码',
	CREDITCODE IS '机构信用代码',
	NAME IS '高管人员姓名',
	SEX IS '高管人员性别',
	BIRTHDAY IS '出生日期',
	CATEGORY IS '高管人员类别',
	IDTYPE IS '证件类型',
	IDNUMBER IS '证件号码',
	POST IS '职务',
	POSTTIME IS '担任本职时间',
	DEGREE IS '最高学历',
	STOCKAMOUNT IS '持有公司股份',
	SKILL IS '技能资格',
	SKILLWINTIME IS '技能资格取得时间',
	PARTTIMEJOB IS '社会兼职',
	WORKRESUME IS '工作简历',
	AWARD IS '个人受奖励情况',
	OTHERCOMPANYNAME IS '在其他企业投资或者任职的企业名称',
	OTHERREGISTERCODE IS '在其他企业投资或任职的企业工商等级注册号',
	OTHERPOST IS '在其投资或任职的其他企业所担任的职务',
	OTHERINVESTAMOUNT IS '在其投资或任职的其他企业的投资额',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_EMPLOYEE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_GRADE (
  GRADEID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  CREDITLEVEL	VARCHAR(10),
  GRADETIME	DATE,
  GRADEORGAN	VARCHAR(20),
  GRADEPROOF	INTEGER,
  GRADEVALIDTIME	VARCHAR(10),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_GRADE
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_GRADE ( 
	GRADEID IS '企业外部评级信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构',
	CREDITCODE IS '机构信用编码',
	CREDITLEVEL IS '信用等级',
	GRADETIME IS '评级时间',
	GRADEORGAN IS '评级机构',
	GRADEPROOF IS '评级证书号',
	GRADEVALIDTIME IS '评价有效期',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_GRADE
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_INVEST (
  INVESTID	INTEGER	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYID	INTEGER,
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  INVESTEDCOMPANYNAME	VARCHAR(80),
  INVESTEDORGANCODE	VARCHAR(20),
  INVESTEDLOANCARDCODE	VARCHAR(20),
  INVESTEDREGISTERCODE	VARCHAR(20),
  INVESTCURRENCY	VARCHAR(6),
  INVESTAMOUNT	VARCHAR(8),
  EQUITYSHARE	DOUBLE,
  RECORDER	VARCHAR(10),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_INVEST
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_INVEST ( 
	INVESTID IS '投资表主键',
	COMPANYID IS '企业表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	INVESTEDCOMPANYNAME IS '被投资单位名称',
	INVESTEDORGANCODE IS '被投资单位组织机构代码',
	INVESTEDLOANCARDCODE IS '被投资单位贷款卡编码',
	INVESTEDREGISTERCODE IS '被投资单位等级注册号',
	INVESTCURRENCY IS '投资币种',
	INVESTAMOUNT IS '投资金额',
	EQUITYSHARE IS '股权比例',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_INVEST
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PATENT (
  PATENTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  PATENTNAME	VARCHAR(40),
  PATENTNUMBER	VARCHAR(20),
  PATENTCLAIM_DATE	DATE,
  PATENTGRANT_DATE	DATE,
  PATENTINDATE	VARCHAR(2),
  MSGPROVIDER	VARCHAR(100),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PATENT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_PATENT IS '企业拥有专利情况';

COMMENT ON BANK.T_COMPANY_PATENT ( 
	PATENTID IS '企业拥有专利情况主表',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	PATENTNAME IS '专利名称',
	PATENTNUMBER IS '专利号',
	PATENTCLAIM_DATE IS '专利申请日',
	PATENTGRANT_DATE IS '授予专利权日期',
	PATENTINDATE IS '专利有效期',
	MSGPROVIDER IS '信息提供部门',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PATENT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PAYMENT (
  PAYMENTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  COSTCATEGORY	INTEGER,
  COSTTIME	DATE,
  COSTNUM	VARCHAR(10),
  COSTAMOUNT	INTEGER,
  ARREARTIME	VARCHAR(10),
  ARREARCOUNT	INTEGER,
  ARREARNUM	VARCHAR(10),
  ARREARAMOUNT	INTEGER,
  MSGPROVIDER	VARCHAR(80),
  RECORDER	VARCHAR(10),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PAYMENT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_PAYMENT IS '企业公共事业缴费信息';

COMMENT ON BANK.T_COMPANY_PAYMENT ( 
	PAYMENTID IS '公共事业缴费信息主表',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	COSTCATEGORY IS '费用类别',
	COSTTIME IS '费用发生时间',
	COSTNUM IS '本期费用度数',
	COSTAMOUNT IS '费用金额',
	ARREARTIME IS '欠缴日期',
	ARREARCOUNT IS '欠缴次数',
	ARREARNUM IS '欠费度数',
	ARREARAMOUNT IS '欠缴金额',
	MSGPROVIDER IS '消息来源机构',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PAYMENT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PERMIT (
  PERMITID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  DATATIME	VARCHAR(10),
  DATAUNIT	VARCHAR(50),
  PERMITTIME	DATE,
  PERMITSCOPE	VARCHAR(50),
  VALIDENDTIME	DATE,
  REMARK	VARCHAR(1000),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PERMIT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_PERMIT IS '企业许可信息';

COMMENT ON BANK.T_COMPANY_PERMIT ( 
	PERMITID IS '企业许可信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	DATATIME IS '数据时间',
	DATAUNIT IS '数据单位',
	PERMITTIME IS '许可时间',
	PERMITSCOPE IS '许可范围',
	VALIDENDTIME IS '有效截止日期止',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PERMIT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PROFIT (
  PROFITID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  TAXCODE	VARCHAR(20),
  REPORTORGAN	VARCHAR(20),
  REPORTDATE	VARCHAR(10),
  PRIMARYINCOME	VARCHAR(20),
  EXPORTINCOME	VARCHAR(20),
  IMPORTINCOME	VARCHAR(20),
  DISCOUNT	VARCHAR(20),
  PRIMARYNET	VARCHAR(20),
  PRIMARYCOST	VARCHAR(20),
  EXPORTCOST	VARCHAR(20),
  PRIMETAXADD	VARCHAR(20),
  RUNINGEXPENSE	VARCHAR(20),
  OTHER	VARCHAR(20),
  DEFERREDINCOME	VARCHAR(20),
  OUTSOURCEINCOME	VARCHAR(20),
  OTHER1	VARCHAR(20),
  PRIMEPROFIT	VARCHAR(20),
  OTHERPROFIT	VARCHAR(20),
  TRADEEXPENSE	VARCHAR(20),
  MANAGEEXPENSE	VARCHAR(20),
  FINANCIALEXPENSE	VARCHAR(20),
  OTHEREXPENSE	VARCHAR(20),
  TRADEPROFIT	VARCHAR(20),
  INVESTINCOME	VARCHAR(20),
  FUTURESINCOME	VARCHAR(20),
  SUBSIDYINCOME	VARCHAR(20),
  SUBSIDYLOSSINCOME	VARCHAR(20),
  OUTERINCOME	VARCHAR(20),
  OUTERDISPOSEINCOME	VARCHAR(20),
  OUTERTRADEINCOME	VARCHAR(20),
  OUTERSALEINCOME	INTEGER,
  OUTERPENALTYINCOME	VARCHAR(20),
  OTHERINCOME	VARCHAR(20),
  SURPLUSPROFIT	VARCHAR(20),
  OUTEREXPENSE	VARCHAR(20),
  OUTERDISPOSEEXPENSE	VARCHAR(20),
  OUTERDEBTEXPENSE	VARCHAR(20),
  OUTERPENALTYEXPENSE	VARCHAR(20),
  OUTERDONATEEXPENSE	VARCHAR(20),
  OUTEROTHEREXPENSE	VARCHAR(20),
  OTHEREXPENSESURPLUS	VARCHAR(20),
  TOTALPROFIT	VARCHAR(20),
  INCOMETAX	VARCHAR(20),
  MINORITYEQUITY	VARCHAR(20),
  INVESTLOSS	VARCHAR(20),
  NETPROFIT	VARCHAR(20),
  UNDISTRIBUTEDPROFIT	VARCHAR(20),
  SURPLUSRESERVE1	VARCHAR(20),
  OTHERADJUST	VARCHAR(20),
  DISTRIBUTABLEPROFIT	VARCHAR(20),
  RETAINEDPROFIT	VARCHAR(20),
  ADDEDCAPITAL	VARCHAR(20),
  SURPLUSRESERVE2	VARCHAR(20),
  LEGALESERVE	VARCHAR(20),
  STAFFAWARD	VARCHAR(20),
  RESERVEFUND	VARCHAR(20),
  EXPANSIONFUND	VARCHAR(20),
  RETURNINVEST	VARCHAR(20),
  OTHER3	VARCHAR(20),
  INVESTORALLOTTEDPROFIT	VARCHAR(20),
  PAYABLESTOCKPROFIT	VARCHAR(20),
  SURPLUSRESERVE3	VARCHAR(20),
  DIVIDENDSPAYABLE2	VARCHAR(20),
  DIVIDENDSPAYABLE3	INTEGER,
  OTHER4	VARCHAR(20),
  UNDISTRIBUTEDPROFIT2	VARCHAR(20),
  UNDISTRIBUTEDPROFIT3	VARCHAR(20)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PROFIT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_PROFIT ( 
	PRIMARYNET IS '主营业务收入净额',
	PRIMARYCOST IS '主营业务成本',
	EXPORTCOST IS '主营业务成本出口产品销售成本',
	PRIMETAXADD IS '主营业务税金及附加',
	RUNINGEXPENSE IS '经营费用',
	OTHER IS '其他',
	DEFERREDINCOME IS '递延收益',
	OUTSOURCEINCOME IS '代购收入',
	OTHER1 IS '其他',
	PRIMEPROFIT IS '主要业务利润',
	OTHERPROFIT IS '其他业务利润',
	TRADEEXPENSE IS '营业费用',
	MANAGEEXPENSE IS '管理费用',
	FINANCIALEXPENSE IS '财务费用',
	OTHEREXPENSE IS '其他费用',
	TRADEPROFIT IS '营业利润',
	INVESTINCOME IS '投资收益',
	FUTURESINCOME IS '期货收益',
	SUBSIDYINCOME IS '补贴收入',
	SUBSIDYLOSSINCOME IS '补贴收入补贴前亏损的企业补贴收入',
	OUTERINCOME IS '营业外收入',
	OUTERDISPOSEINCOME IS '营业外收入处置固定资产净收益',
	OUTERTRADEINCOME IS '营业外收入非货币性交易收益',
	OUTERSALEINCOME IS '营业外收入出售无形资产收益',
	OTHERINCOME IS '其他收入',
	SURPLUSPROFIT IS '其他用以前年度含量工资节余弥补利润',
	OUTERDISPOSEEXPENSE IS '营业外支出处置固定资产净损失',
	OUTERDEBTEXPENSE IS '营业外支出债务重组损失',
	OUTERPENALTYEXPENSE IS '营业外支出罚款支出',
	OUTERDONATEEXPENSE IS '营业外支出捐赠支出',
	OUTEROTHEREXPENSE IS '其他支出',
	OTHEREXPENSESURPLUS IS '其他支出结转的含量工资包干节余',
	TOTALPROFIT IS '利润总额',
	INCOMETAX IS '所得税',
	MINORITYEQUITY IS '少数股东权益',
	INVESTLOSS IS '未确认的投资损失',
	NETPROFIT IS '净利润',
	UNDISTRIBUTEDPROFIT IS '年初未分配利润',
	SURPLUSRESERVE1 IS '盈余公积补亏',
	DISTRIBUTABLEPROFIT IS '可供分配的利润',
	RETAINEDPROFIT IS '单项留用的利润',
	ADDEDCAPITAL IS '补充流动资本',
	SURPLUSRESERVE2 IS '提取法定盈余公积',
	LEGALESERVE IS '提取法定公益金',
	STAFFAWARD IS '提取职工奖励及福利基金',
	RESERVEFUND IS '提取储备基金',
	EXPANSIONFUND IS '提取企业发展基金',
	RETURNINVEST IS '利润归还投资',
	OTHER3 IS '其他',
	INVESTORALLOTTEDPROFIT IS '可供投资者分配的利润',
	PAYABLESTOCKPROFIT IS '应付优先股股利',
	SURPLUSRESERVE3 IS '提取任意盈余公积',
	DIVIDENDSPAYABLE2 IS '应付普通股股利',
	DIVIDENDSPAYABLE3 IS '转作资本的普通股股利',
	OTHER4 IS '其他',
	UNDISTRIBUTEDPROFIT2 IS '未分配利润',
	UNDISTRIBUTEDPROFIT3 IS '未分配利润应由以后年度税前利润弥补的亏损' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PROFIT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PROJECT (
  PROJECTID	BIGINT,
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  PROJECTNAME	VARCHAR(40),
  FINISHDATE	DATE,
  INVESTAMOUNT	VARCHAR(10),
  CAPITALSOURCE	INTEGER,
  PAYBACKPERIOD	INTEGER,
  RETURNRATE	INTEGER,
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PROJECT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_PROJECT ( 
	PROJECTID IS '企业在建项目主表',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	PROJECTNAME IS '项目名称',
	FINISHDATE IS '预计完成时间',
	INVESTAMOUNT IS '项目总投资',
	CAPITALSOURCE IS '项目资金来源',
	PAYBACKPERIOD IS '预计资金回收期',
	RETURNRATE IS '预计资金回报率',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PROJECT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PUBLICFOUND (
  PUBLICFOUNDID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  DATATIME	VARCHAR(10),
  PAYMENTBEGINTIME	DATE,
  PAYMENTENDTIME	DATE,
  PAYMENTGATHERTIME	DATE,
  GATHERSTATUS	INTEGER,
  PAYMENTNUM	INTEGER,
  PAYMENTAMOUNT	INTEGER,
  PAYMENTRATIO	INTEGER,
  ARREARNUM	DATE,
  ARREARAMOUNT	INTEGER,
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PUBLICFOUND
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COMPANY_PUBLICFOUND ( 
	COMPANYNAME IS '企业名称',
	PAYMENTBEGINTIME IS '初缴时间',
	PAYMENTENDTIME IS '缴至时间',
	PAYMENTGATHERTIME IS '最近一次汇缴时间',
	GATHERSTATUS IS '单位当月汇缴状态',
	PAYMENTNUM IS '缴存人数',
	PAYMENTAMOUNT IS '缴存金额',
	PAYMENTRATIO IS '缴存比例',
	ARREARNUM IS '欠缴日期',
	ARREARAMOUNT IS '欠缴金额',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PUBLICFOUND
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_PUNISH (
  PUNISHID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(20),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  PUNISHTYPE	INTEGER,
  DATATIME	DATE,
  PUNISHORGAN	VARCHAR(80),
  PUNISHDETAIL	VARCHAR(1000),
  INVOLVEAMOUNT	INTEGER,
  PUNISHAMOUNT	INTEGER,
  CURRENCY	VARCHAR(10),
  PUNISHDECIDE	VARCHAR(1000),
  ISREVIEW	INTEGER,
  REVIEWORGAN	VARCHAR(100),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_PUNISH
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_PUNISH IS '行政处罚或违规信息';

COMMENT ON BANK.T_COMPANY_PUNISH ( 
	PUNISHID IS '企业处罚或违规信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	PUNISHTYPE IS '违法或违规行为类别',
	DATATIME IS '数据时间',
	PUNISHORGAN IS '裁定违规或处罚机构',
	PUNISHDETAIL IS '违法或违规行为描述',
	INVOLVEAMOUNT IS '涉及金额',
	PUNISHAMOUNT IS '处罚金额',
	CURRENCY IS '币种',
	PUNISHDECIDE IS '处罚决定',
	ISREVIEW IS '是否行政复议',
	REVIEWORGAN IS '行政复议受理机关',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_PUNISH
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_TAX (
  TAXID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  TAXCODE	VARCHAR(30),
  OCCURTIME	VARCHAR(10),
  COLLECTUNIT	VARCHAR(100),
  TAXITEMS	VARCHAR(6),
  CURRENCY	INTEGER,
  MONTH_PAYMENT	INTEGER,
  YEAR_PAYMENT	INTEGER,
  TAX_ARREARTIME	VARCHAR(10),
  TAX_ARREARAMOUNT	INTEGER,
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_TAX
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_TAX IS '企业纳税信息';

COMMENT ON BANK.T_COMPANY_TAX ( 
	TAXID IS '企业纳税信息表主键',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	TAXCODE IS '税收编码',
	OCCURTIME IS '数据时间',
	COLLECTUNIT IS '征收单位',
	TAXITEMS IS '税收科目',
	CURRENCY IS '币种',
	MONTH_PAYMENT IS '本月缴纳金额',
	YEAR_PAYMENT IS '本年累计缴纳金额',
	TAX_ARREARTIME IS '欠税日期',
	TAX_ARREARAMOUNT IS '欠税总金额',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_TAX
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COMPANY_WARRANT (
  WARRANTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COMPANYNAME	VARCHAR(80),
  ORGANCODE	VARCHAR(20),
  CREDITCODE	VARCHAR(20),
  OCCURTIME	DATE,
  UNIT	VARCHAR(20),
  OWNERSHIP	VARCHAR(50),
  REGISTERDETAIL	VARCHAR(50),
  REMARK	VARCHAR(100),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COMPANY_WARRANT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE BANK.T_COMPANY_WARRANT IS '企业权证信息';

COMMENT ON BANK.T_COMPANY_WARRANT ( 
	WARRANTID IS '企业权证信息主表',
	COMPANYNAME IS '企业名称',
	ORGANCODE IS '组织机构编码',
	CREDITCODE IS '机构信用编码',
	OCCURTIME IS '数据时间',
	UNIT IS '数据单位',
	OWNERSHIP IS '土地/房产权属',
	REGISTERDETAIL IS '出让金缴纳情况/办理房屋登记情况',
	REMARK IS '备注',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COMPANY_WARRANT
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COOPERATION (
  COOPERATIONID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  COOPERATIONNAME	VARCHAR(80),
  ORGACODE	VARCHAR(50),
  TAXCODE	VARCHAR(35),
  REGISTERADDRESS	VARCHAR(80),
  MAILADDRESS	VARCHAR(80),
  REGISTERDATE	DATE,
  REGISTERCAPITAL	VARCHAR(30),
  REALCAPITAL	VARCHAR(30),
  LEGALPERSON	VARCHAR(50),
  IDNUM	VARCHAR(20),
  PHONE	VARCHAR(15),
  MEMBERS	INTEGER,
  BUSINESSCOPE	VARCHAR(100),
  BUSINESSAREA	INTEGER,
  FARMERS	INTEGER,
  CONNECTIONBASE	VARCHAR(50),
  RECORDER	VARCHAR(50),
  RECORDTIME	TIMESTAMP(12),
  ORGAN_ID	VARCHAR(50)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COOPERATION
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COOPERATION ( 
	COOPERATIONID IS '农民专业经济合作组织表主键',
	COOPERATIONNAME IS '农民专业经济合作组织名称',
	ORGACODE IS '组织机构编号',
	TAXCODE IS '税务登记号',
	REGISTERADDRESS IS '注册地址',
	MAILADDRESS IS '通信地址',
	REGISTERDATE IS '注册时间',
	REGISTERCAPITAL IS '注册资本',
	REALCAPITAL IS '实收资本',
	LEGALPERSON IS '法定代表人',
	IDNUM IS '身份证号',
	PHONE IS '联系电话',
	MEMBERS IS '社员人数',
	BUSINESSCOPE IS '经营范围',
	BUSINESSAREA IS '经营场地面积',
	FARMERS IS '带动农户(户)',
	CONNECTIONBASE IS '连接基地',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间',
	ORGAN_ID IS '组织机构id' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COOPERATION
	ALLOW WRITE ACCESS;

CREATE TABLE BANK.T_COOPERATION_DEBT (
  DEBTID	BIGINT	NOT NULL	GENERATED ALWAYS
    AS IDENTITY (START WITH 0, INCREMENT BY 1, CACHE 20,
       NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  ORGANCODE	VARCHAR(10),
  CASHCAPITAL	VARCHAR(20),
  SHORTINVEST	VARCHAR(20),
  RECEIVABLES	VARCHAR(20),
  PREPAYMENT	VARCHAR(20),
  INVENTORY	VARCHAR(20),
  FLOATASSET	VARCHAR(10),
  FLOATASSETALL	VARCHAR(20),
  FIXEDASSET	VARCHAR(20),
  DEPRECICATION	VARCHAR(20),
  NETVALUE	VARCHAR(20),
  BUILDINGPROJECT	VARCHAR(20),
  FIXEDASSETALL	VARCHAR(20),
  INVISIBLEASSET	VARCHAR(20),
  ASSETALL	VARCHAR(20),
  SHORTLOAN	VARCHAR(20),
  BANKLOAN	VARCHAR(20),
  ACCOUNTSPAYABLE	VARCHAR(20),
  DEPOSITRECEIVED	VARCHAR(20),
  UNPAIDTAX	VARCHAR(20),
  FLOATDEBT	VARCHAR(20),
  FLOATDEBTALL	VARCHAR(20),
  LONGDEBTALL	VARCHAR(20),
  REGISTERCAPITAL	VARCHAR(20),
  REALCAPITAL	VARCHAR(20),
  CAPITALRESERVE	VARCHAR(20),
  SURPLUSRESERVE	VARCHAR(20),
  UNALLOTPROFIT	VARCHAR(20),
  TOTALEQUITY	VARCHAR(20),
  TOTALEQUITY1	VARCHAR(20),
  HANDINGCOST	VARCHAR(20),
  FINANCIALCOST	VARCHAR(20),
  INTERESTEXPENSE	VARCHAR(20),
  BUSINESSPROFIT	VARCHAR(20),
  INVESTINCOME	VARCHAR(20),
  SUBSIDYINCOME	VARCHAR(20),
  UNBUSINESSINCOME	VARCHAR(20),
  UNBUSINESSEXPENSE	VARCHAR(20),
  PROFITLOSS	VARCHAR(20),
  TOTALPROFIT	VARCHAR(20),
  PAYABLEINCOMETAX	VARCHAR(20),
  PAYABLEADDEDTAX	VARCHAR(20),
  PAIDADDEDTAX	VARCHAR(20),
  NETPROFIT	VARCHAR(20),
  RECORDER	VARCHAR(20),
  RECORDTIME	TIMESTAMP(12),
  YEARMONTH	VARCHAR(10),
  COOPERATIONNAME	VARCHAR(80),
  CASHCAPITAL2	VARCHAR(20),
  SHORTINVEST2	VARCHAR(20),
  RECEIVABLES2	VARCHAR(20),
  PREPAYMENT2	VARCHAR(20),
  INVENTORY2	VARCHAR(20),
  FLOATASSET2	VARCHAR(10),
  FLOATASSETALL2	VARCHAR(20),
  FIXEDASSET2	VARCHAR(20),
  DEPRECICATION2	VARCHAR(20),
  NETVALUE2	VARCHAR(20),
  BUILDINGPROJECT2	VARCHAR(20),
  FIXEDASSETALL2	VARCHAR(20),
  INVISIBLEASSET2	VARCHAR(20),
  ASSETALL2	VARCHAR(20),
  SHORTLOAN2	VARCHAR(20),
  BANKLOAN2	VARCHAR(20),
  ACCOUNTSPAYABLE2	VARCHAR(20),
  DEPOSITRECEIVED2	VARCHAR(20),
  UNPAIDTAX2	VARCHAR(20),
  FLOATDEBT2	VARCHAR(20),
  FLOATDEBTALL2	VARCHAR(20),
  LONGDEBTALL2	VARCHAR(20),
  REGISTERCAPITAL2	VARCHAR(20),
  REALCAPITAL2	VARCHAR(20),
  CAPITALRESERVE2	VARCHAR(20),
  SURPLUSRESERVE2	VARCHAR(20),
  UNALLOTPROFIT2	VARCHAR(20),
  TOTALEQUITY2	VARCHAR(20),
  TOTALEQUITY12	VARCHAR(20),
  HANDINGCOST2	VARCHAR(20),
  FINANCIALCOST2	VARCHAR(20),
  INTERESTEXPENSE2	VARCHAR(20),
  BUSINESSPROFIT2	VARCHAR(20),
  INVESTINCOME2	VARCHAR(20),
  SUBSIDYINCOME2	VARCHAR(20),
  UNBUSINESSINCOME2	VARCHAR(20),
  UNBUSINESSEXPENSE2	VARCHAR(20),
  PROFITLOSS2	VARCHAR(20),
  TOTALPROFIT2	VARCHAR(20),
  PAYABLEINCOMETAX2	VARCHAR(20),
  PAYABLEADDEDTAX2	VARCHAR(20),
  PAIDADDEDTAX2	VARCHAR(20),
  NETPROFIT2	VARCHAR(20)
  ) 
  IN USERSPACE1
  ORGANIZE BY ROW;

ALTER TABLE BANK.T_COOPERATION_DEBT
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON BANK.T_COOPERATION_DEBT ( 
	DEBTID IS '农村经济合作组织资产负债表主键',
	ORGANCODE IS '组织机构编码',
	CASHCAPITAL IS '货币资金',
	SHORTINVEST IS '短期投资',
	RECEIVABLES IS '应收账款净额',
	PREPAYMENT IS '预付账款',
	INVENTORY IS '存货',
	FLOATASSET IS '其他流动资产',
	FLOATASSETALL IS '流动资产合计',
	FIXEDASSET IS '固定资产原价',
	DEPRECICATION IS '其中折旧',
	NETVALUE IS '固定资产净值',
	BUILDINGPROJECT IS '在建项目',
	FIXEDASSETALL IS '固定资产合计',
	INVISIBLEASSET IS '无形及递延资产合计',
	ASSETALL IS '资产合计',
	SHORTLOAN IS '短期借款',
	BANKLOAN IS '银行借款',
	ACCOUNTSPAYABLE IS '应付账款',
	DEPOSITRECEIVED IS '预收账款',
	UNPAIDTAX IS '未缴税金',
	FLOATDEBT IS '其他流动负债',
	FLOATDEBTALL IS '流动负债合计',
	LONGDEBTALL IS '长期负债合计',
	REGISTERCAPITAL IS '注册资本',
	REALCAPITAL IS '实收资本',
	CAPITALRESERVE IS '资本公积',
	SURPLUSRESERVE IS '盈余公积',
	UNALLOTPROFIT IS '未分配利润',
	TOTALEQUITY IS '所有者权益合计',
	TOTALEQUITY1 IS '负债和所有者权益合计',
	HANDINGCOST IS '管理费用',
	FINANCIALCOST IS '财务费用',
	INTERESTEXPENSE IS '其中利息支出',
	BUSINESSPROFIT IS '营业利润',
	INVESTINCOME IS '投资收益',
	SUBSIDYINCOME IS '国家补贴收入',
	UNBUSINESSINCOME IS '营业外收入',
	UNBUSINESSEXPENSE IS '营业外支出',
	PROFITLOSS IS '以前年度损益调整',
	TOTALPROFIT IS '利润总和',
	PAYABLEINCOMETAX IS '应交所得税',
	PAYABLEADDEDTAX IS '应交增值税',
	PAIDADDEDTAX IS '实交增值税',
	NETPROFIT IS '利润净额',
	RECORDER IS '记录人',
	RECORDTIME IS '记录时间',
	YEARMONTH IS '年月',
	COOPERATIONNAME IS '合作社名称',
	CASHCAPITAL2 IS '货币资金(期末值)',
	SHORTINVEST2 IS '短期投资(期末值)',
	RECEIVABLES2 IS '应收账款净额(期末值)',
	PREPAYMENT2 IS '预付账款(期末值)',
	INVENTORY2 IS '存货(期末值)',
	FLOATASSET2 IS '其他流动资产(期末值)',
	FLOATASSETALL2 IS '流动资产合计(期末值)',
	FIXEDASSET2 IS '固定资产原价(期末值)',
	DEPRECICATION2 IS '其中折旧(期末值)',
	NETVALUE2 IS '固定资产净值(期末值)',
	BUILDINGPROJECT2 IS '在建项目(期末值)',
	FIXEDASSETALL2 IS '固定资产合计(期末值)',
	INVISIBLEASSET2 IS '无形及递延资产合计(期末值)',
	ASSETALL2 IS '资产合计(期末值)',
	SHORTLOAN2 IS '短期借款(期末值)',
	BANKLOAN2 IS '银行借款(期末值)',
	ACCOUNTSPAYABLE2 IS '应付账款(期末值)',
	DEPOSITRECEIVED2 IS '预收账款(期末值)',
	UNPAIDTAX2 IS '未缴税金(期末值)',
	FLOATDEBT2 IS '其他流动负债(期末值)',
	FLOATDEBTALL2 IS '流动负债合计(期末值)',
	LONGDEBTALL2 IS '长期负债合计(期末值)',
	REGISTERCAPITAL2 IS '注册资本(期末值)',
	REALCAPITAL2 IS '实收资本(期末值)',
	CAPITALRESERVE2 IS '资本公积(期末值)',
	SURPLUSRESERVE2 IS '盈余公积(期末值)',
	UNALLOTPROFIT2 IS '未分配利润(期末值)',
	TOTALEQUITY2 IS '所有者权益合计(期末值)',
	TOTALEQUITY12 IS '负债和所有者权益合计(期末值)',
	HANDINGCOST2 IS '管理费用(期末值)',
	FINANCIALCOST2 IS '财务费用(期末值)',
	INTERESTEXPENSE2 IS '其中利息支出(期末值)',
	BUSINESSPROFIT2 IS '营业利润(期末值)',
	INVESTINCOME2 IS '投资收益(期末值)',
	SUBSIDYINCOME2 IS '国家补贴收入(期末值)',
	UNBUSINESSINCOME2 IS '营业外收入(期末值)',
	UNBUSINESSEXPENSE2 IS '营业外支出(期末值)',
	PROFITLOSS2 IS '以前年度损益调整(期末值)',
	TOTALPROFIT2 IS '利润总和(期末值)',
	PAYABLEINCOMETAX2 IS '应交所得税(期末值)',
	PAYABLEADDEDTAX2 IS '应交增值税(期末值)',
	PAIDADDEDTAX2 IS '实交增值税(期末值)',
	NETPROFIT2 IS '利润净额(期末值)' );

COMMIT;

RUNSTATS ON TABLE BANK.T_COOPERATION_DEBT
	ALLOW WRITE ACCESS;



